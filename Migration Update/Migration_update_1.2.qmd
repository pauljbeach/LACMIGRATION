---
title: "Migration Update"
author: "Paul Beach"
format: html
editor: visual
---

```{r setup}
mth <- "Dec"
# setup the environment, load parameters
source("MU_setup.R")
# Edit the theme in Utils/usaidtheme.R
# TODO move to setup

# load utils
source("MU_utils.R")


# read in encounter data (Change FY argument if September)
edata <- setup_migration_datasets(month = mth, year = 2024, fy = F)

# functions for other data
source("MU_data_prep.R")

# load relevant dates
dt <- load_dates(mth, year2 = 2024)
lag_dt <- load_lag_dates()
month2 <- dt$month2
date2 <- dt$date2
date1 <- dt$date1

# load supporting data
sup <- load_supp_data()

# assign often used data

swb <- edata$swb
dar <- edata$dar
mex <- edata$mex
cbp_all <- edata$cbp_all


usbphex <- "#5C763D"
ofohex <- "#103366"
```

## Header
```{r}
swb %>% 
  summarise(across(encounter_count,sum),.by = date) %>% 
  mutate(pct = encounter_count/dplyr::lead(encounter_count)-1)


swb %>% 
  filter(month(date) %in% 1:11) %>% 
  summarise(across(encounter_count,sum),.by = year) %>% 
  mutate(pct = encounter_count/dplyr::lead(encounter_count)-1)


swb %>% 
  filter(date == date2) %>% 
  summarise(across(encounter_count,sum),.by = c(component)) %>% 
  mutate(pct = encounter_count/dplyr::lead(encounter_count)-1)
#######

cbp_all %>% 
  summarise(across(encounter_count,sum),.by = date) %>% 
  mutate(pct = encounter_count/dplyr::lead(encounter_count)-1)


cbp_all %>% 
  filter(month(date) %in% 1:11) %>% 
  summarise(across(encounter_count,sum),.by = year) %>% 
  mutate(pct = encounter_count/dplyr::lead(encounter_count)-1)


cbp_all %>% 
  filter(date == date2) %>% 
  summarise(across(encounter_count,sum),.by = c(component)) %>% 
  mutate(pct = encounter_count/dplyr::lead(encounter_count)-1)


####
dar %>% 
  summarise(across(encounter_count,sum),.by = date) %>% 
  mutate(pct = encounter_count/dplyr::lead(encounter_count)-1)

dar %>% 
  filter(month(date) %in% 1:11) %>%
  mutate(year = year(date)) %>% 
  summarise(across(encounter_count,sum),.by = year) %>% 
  mutate(pct = encounter_count/dplyr::lead(encounter_count)-1)
```



## DHS Graphs
```{r}
pull_cf_result()
```

## U.S. Graphs

### Aggregate Time Series

```{r LT TS}
swb60 <- pdf_text("Encounter Data/swb60-20.PDF") %>%
  str_split(pattern = "\n") %>%
  map(~ str_split(., " ")) %>%
  .[[1]] %>%
  map(~ .[!. %in% ""]) %>%
  map(~ .[c(1, 11)]) %>%
  .[c(9:69)]

swb60t <- tibble(
  fiscal_year = map_chr(swb60, ~ pluck(., 1)),
  enc = map_chr(swb60, ~ pluck(., 2))
) %>%
  mutate(across(enc, ~ str_remove_all(., "[:punct:]"))) %>%
  mutate(across(everything(), as.numeric)) %>%
  rename(swb_apps = enc)

apps <- read.csv("Encounter Data/apps_hist.csv") %>%
  t() %>%
  as_tibble(rownames = "x1") %>%
  mutate(
    x1 = str_remove(x1, "X"),
    x1 = str_remove_all(x1, "\\.")
  ) %>%
  pull(x1)

cbp_hist <- tibble(
  fiscal_year = apps[1:length(apps) %% 2 == 1],
  apps = apps[1:length(apps) %% 2 == 0]
) %>%
  mutate(across(c(fiscal_year, apps), as.numeric)) %>%
  arrange(fiscal_year) %>%
  filter(fiscal_year < 2020) %>%
  left_join(swb60t) %>%
  mutate(across(apps, ~ ifelse(!is.na(swb_apps), swb_apps, .))) %>%
  select(-swb_apps) %>%
  bind_rows(
    cbp_all %>%
      filter(land_border_region == "Southwest Land Border") %>%
      filter(component != "Office of Field Operations") %>%
      summarise(across(encounter_count, sum), .by = fiscal_year) %>%
      rename(apps = encounter_count)
  ) %>%
  filter(fiscal_year <= 2024) %>%
  # make average monthly
  mutate(appsm = ifelse(fiscal_year == 2024, apps / (month(date2) + 3), apps / 12)) %>%
  arrange(fiscal_year)


lt_ts_plot <- ggplot(cbp_hist, aes(x = fiscal_year, y = apps)) +
  # Apply custom theme
  theme_usaid_blue(
    base_size = 20,
    title = "Migrants Apprehended at the U.S. Southwest Border",
    subtitle = "Fiscal Year Apprehensions Between Ports of Entry | FY 1925 - FY 2024",
    caption = paste(
      cap$swb_alt,
      "<br>Nationwide encounters were recorded annually before 1960"
      # . Chart updated today()
    )
  ) +
  # Y scale settings
  scale_y_continuous(
    breaks = c(5,10,15,20)*1e5,
    labels = label_maxunit(),
  ) +
  # X scale settings
  scale_x_continuous(
    breaks  = c(seq(1925, 2000, 25), 2024),
    labels  = c(seq(1925, 2000, 25), "2024"),
    expand  = expansion(mult = c(0.01, 0.1))
  ) +
  # Highlight specific fiscal years
  geom_point(
    data = . %>% filter(fiscal_year %in% c(2024))
  ) +
  # Repeated label annotations
  pmap(
    list(
      # Fiscal years, nudge_x, min.segment.length
      c(2024),
      c(1),
      c(0)
    ),
    ~ geom_text_repel(
      data = . %>% filter(fiscal_year %in% ..1),
      aes(label = paste0(round(apps / 1e6, 1), "M")),
      nudge_y = 0,
      nudge_x = ..2,
      hjust = 0,
      size = 5,
      family = "Source Sans 3",
      direction = "y",
      fontface = "bold",
      # box.padding     = 0.9,   # Increase padding around labels
      # point.padding   = 0.5,   # Padding around the point
      # force           = 3,     # Spread out labels more
      # max.overlaps    = 10,
      segment.linetype = "dotted",
      min.segment.length = ..3
    )
  ) +
  # Draw rangeframe along bottom and left sides
  geom_rangeframe(sides = "bl") +
  # Titles and axis labels
  labs(
    x = NULL,
    y = NULL
  ) +
  # Coordinate limits
  coord_cartesian(
    xlim = c(1925, 2030),
    clip = "off",
    expand = FALSE
  ) +
  # Minor theme tweaks
  theme(
    panel.border        = element_rect(size = 10, fill = NA, color = "transparent"),
    plot.title.position = "plot",
    plot.caption        = element_textbox(size = 10)
  ) +
  # Smooth line
  geom_panel_lines() +
  geom_xspline() +
  stat_xspline(geom = "area", fill = usbphex, alpha = 0.3)


# Export the plot
ggs(
  plot           = lt_ts_plot,
  category       = "ltencounters",
  subset         = "swb",
  demographics   = NULL,
  charttype      = "ts",
  additionalinfo = "fy24aug",
  extension      = ".jpg",
  folder         = "mu_charts",
  width          = 280,
  height         = 170
)

```

```{r SWB_monthly_TS}
# Load data
month_swbf <- read_csv(here("Encounter Data", "month_swbf (1).csv"))

# Build & plot
month_swbf_plot <- month_swbf %>%
  bind_rows(
    swb %>%
      filter(component == "U.S. Border Patrol") %>%
      summarise(across(encounter_count, sum), .by = date) %>%
      filter(date > max(month_swbf$date))
  ) %>%
  arrange(desc(date)) %>%
  mutate(year = year(date)) %>%
  filter(year >= 2000) %>%
  ggplot(aes(x = date, y = encounter_count)) +
  # Custom theme
  theme_usaid_blue(
    base_size = 20,
    subtitle = "Monthly Apprehensions Between Ports of Entry | 2000 - 2024",
    title = "Migrants Apprehended at the U.S. Southwest Border",
    caption = cap$swb_alt
    # paste("<br>Chart updated", month(today(), abbr = TRUE, label = TRUE), year(today()))
  ) +
  # Highlight the latest data point
  geom_point(
    data = . %>% filter(date == max(date)),
    show.legend = FALSE,
    color = "black",
    size = 1
  ) +
  # Customize y scale
  scale_y_continuous(
    breaks = seq(5e4, 2.5e5, 5e4),
    labels = c("50", "100", "150", "200", "250K")
  ) +
  # Customize x scale
  scale_x_date(
    breaks      = seq.Date(as_date("2000-01-01"), as_date("2024-01-01"), by = "5 years") %>% c("2024-01-01"),
    date_labels = "%Y"
  ) +
  # Light cleanup
  theme(plot.title.position = "plot") +
  labs(x = NULL, y = NULL) +
  coord_cartesian(
    clip = "off",
    xlim = c(as.Date("2000-01-01"), max(month_swbf$date) + 650),
    ylim = c(0, 2.5e5),
    expand = FALSE
  ) +
  geom_panel_lines() +
  # Label the latest data point
  geom_text_repel(
    data = . %>% filter(date == max(date)),
    aes(label = paste0(round(encounter_count / 1e3), "K")),
    hjust = 0,
    nudge_x = 100,
    size = 5,
    family = "Source Sans 3",
    fontface = "bold",
    direction = "y"
  ) +
  # Smoothed area fill + outline
  stat_xspline(geom = "area", fill = usbphex, alpha = 0.2) +
  geom_xspline()

# Export the plot
ggs(
  plot           = month_swbf_plot,
  category       = "apprehensions",
  subset         = "swb",
  demographics   = NULL,
  additionalinfo = "monthly_2020",
  folder         = "mu_charts",
  charttype      = "ts",
  width          = 280,
  height         = 170
)
```

```{r SWB_TS}
# Load Data

swb_tsum <- swb %>%
  mutate(fiscal_year = fiscal_year(date)) %>%
  summarise(across(encounter_count, sum), .by = c(date, fiscal_year)) %>%
  arrange(date)


# Build & Plot

swb_ts_plot <- swb_tsum %>%
  ggplot(aes(x = date, y = encounter_count)) +
  # Theme First: Title & Subtitle Here

  theme_usaid_blue(
    caption = paste(cap$swb_alt),
    rf = TRUE,
    base_size = 20,
    title = "Migrants Encountered at the U.S. Southwest Border",
    subtitle = paste(
      "Monthly Encounters |",
      month(range(swb_tsum$date)[1], label = TRUE, abbr = TRUE),
      year(range(swb_tsum$date)[1]),
      "-",
      month(range(swb_tsum$date)[2], label = TRUE, abbr = TRUE),
      year(range(swb_tsum$date)[2])
    )
  ) +


  # Basic Axis Labels (no title/subtitle)

  labs(
    x = NULL,
    y = NULL
  ) +

  # Highlight Specific Data Point

  geom_point(
    data  = . %>% filter(date == date2),
    color = "black",
    size  = 1.5
  ) +


  # labels

  geom_text_repel(
    aes(label = round(encounter_count / 1e3, 0) %>% paste0("K")),
    data = . %>% filter(date == max(date)),
    size = 5,
    family = "Source Sans 3",
    fontface = "bold",
    direction = "y",
    nudge_x = 20,
    hjust = 0
  ) +


  # Y Scale

  scale_y_continuous(
    breaks = seq(1e5, 3e5, 1e5),
    labels = c(100, 200, "300K"),
    limits = c(0, 3.2e5),
    expand = c(0, 0)
  ) +


  # X Scale

  scale_x_date(
    breaks       = seq.Date(my(paste(month2, 2014)), date2, by = "1 years"),
    date_labels  = "%b '%y",
    minor_breaks = seq.Date(min(swb_tsum$date), date2, by = "month")
  ) +


  # Coordinate Limits

  coord_cartesian(
    clip = "off",
    expand = FALSE,
    xlim = c(min(swb_tsum$date), max(swb_tsum$date) + 150),
    ylim = c(0, max(swb_tsum$encounter_count) * 1.01)
  ) +


  # Additional Theme Tweaks

  theme(
    axis.minor.ticks.x.bottom = element_line(color = "grey")
  ) +


  # Remove Color Legend & Adjust X-Axis Guides
  guides(
    color = "none",
    x = guide_axis(minor.ticks = TRUE)
  ) +
  geom_panel_lines() +


  # Ribbon (Area Under the Curve)
  stat_xspline(
    geom  = "area",
    fill  = "lightblue",
    alpha = 0.2
  ) +


  # Spline Line

  geom_xspline()


# Export

ggs(
  plot         = swb_ts_plot,
  folder       = "mu_charts",
  category     = "encounters",
  subset       = "swb",
  extension    = ".png",
  demographics = NULL,
  charttype    = "ts",
  width        = 280,
  height       = 170
)
```

```{r by POE all borders}

# Data Filtering & Summarizing

swb_tsum <- cbp_all %>%
  filter(
    # land_border_region == "Southwest Land Border",
    fiscal_year >= 2019
  ) %>%
  summarise(
    across(encounter_count, sum),
    .by = c(date, fiscal_year, component)
  ) %>%
  mutate(
    lab2 = ifelse(
      component == "U.S. Border Patrol",
      "Between\nPorts of Entry",
      "At Ports of Entry"
    )
  )


# Build & Plot

component_plot <- swb_tsum %>%
  ggplot(aes(x = date, y = encounter_count, color = component)) +


  # Theme First (Title & Caption Inside)

  theme_usaid_blue(
    title = "Migrants Encountered at All U.S. Borders and Ports of Entry",
    caption = paste(
      cap$swb_alt, "<br>",
      "Encounters at Ports of Entry defined as OFO inadmissibles and ",
      "between ports of entry as USBP apprehensions"
    ),
    base_size = 20,
    bl = FALSE
  ) +


  # Basic Axis Labels (No Title/Sub in Labs)

  labs(
    x = NULL,
    y = NULL
  ) +


  # Y-Axis Scale

  scale_y_continuous(
    breaks = seq(0, 2.5e5, 5e4),
    labels = c("0", "50", "100", "150", "200", "250K"),
    limits = c(0, 3e5)
  ) +

  # ---------------------------
  # X-Axis Scale
  # ---------------------------
  scale_x_date(
    breaks      = tm_db(month = month2, year0 = 2018, n = 1),
    date_labels = "%b '%y"
  ) +


  # Color Scale & Guide

  scale_color_manual(
    values = c("U.S. Border Patrol" = usbphex,
               "Office of Field Operations" = ofohex)
  ) +
  guides(color = "none") +


  # Coordinate & Clipping

  coord_cartesian(
    clip  = "off",
    expand = FALSE,
    xlim  = c(min(swb_tsum$date), max(swb_tsum$date) + 400),
    ylim  = range(swb_tsum$encounter_count) * 1.01
  ) +


  # Mark Latest Data Point

  geom_point(
    data = . %>% filter(date == date2)
  ) +


  # Label the Latest Date

  geom_text_repel(
    data = . %>% filter(date == max(date)),
    aes(label = lab2, color = component),
    segment.linetype = "dotted",
    hjust = 0,
    clip = "off",
    family = "Source Sans 3",
    nudge_x = 50,
    size = 5,
    fontface = "bold",
    direction = "y"
  ) +


  # Panel Lines & Spline

  geom_panel_lines() +
  geom_xspline() +


  # Additional Theme Tweaks

  theme(
    legend.position = "top",
    # Removed base_family here to avoid overwriting
    axis.title.y = element_markdown(halign = 0.5),
    plot.title = element_textbox_simple(margin = margin(5,5,10,5))
  )


# Export

ggs(
  plot          = component_plot,
  category      = "encounters",
  subset        = "swb",
  demographics  = "component",
  charttype     = "spaghetti",
  folder        = "mu_charts",
  width         = 280,
  height        = 150,
  dpi           = 300
)
```

```{r SWB_Tree_Month}
swb_tree_plot <- swb |>
  filter(
    year == 2024,
    # month_abbv == toupper(month2)
  ) |>
  mutate(citizenship = ifelse(!citizenship %in% swb_lac, "OTHER", citizenship), ) |>
  group_by(citizenship) |>
  summarise(across(encounter_count, sum)) |>
  mutate(
    share = encounter_count / sum(encounter_count) * 100,
    citizenship = ifelse(share < 1, "OTHER", citizenship)
  ) |>
  group_by(citizenship) |>
  summarise(across(c(encounter_count, share), sum)) |>
  ungroup() %>%
  mutate(
    other = ifelse(citizenship == "OTHER", NA, citizenship),
    subregion = case_when(
      citizenship %in% c("MEXICO") ~ "Mexico",
      citizenship %in% c(nca, "NICARAGUA") ~ "nca",
      citizenship %in% c("VENEZUELA", "COLOMBIA", "PERU", "ECUADOR", "BRAZIL") ~ "sa",
      T ~ "Other"
    )
  ) %>%
  ggplot(aes(
    area = share,
    fill = other,
    subgroup = subregion,
    label = ifelse(share > 3,
      paste0(
        str_to_title(citizenship),
        "\n",
        round(share, 0),
        "%"
      ),
      paste0(
        str_to_title(citizenship),
        " ",
        "\n",
        round(share, 0),
        "%"
      )
    )
  )) +
  theme_usaid_blue(
    base_family = "Gill Sans",
    caption = cap$swb_alt,
    title = paste(
      "Migrants Encountered at the U.S. Southwest Border"
      # month2_long,year2
    ),
    subtitle = "Calendar Year 2024",
    base_size = 20
  ) +
  geom_treemap(size = 2, color = "white", start = "topleft") +
  geom_treemap_subgroup_border(start = "topleft", color = "white", size = 4) +
  geom_treemap_text(
    place = "center",
    grow = F,
    size = 18,
    start = "topleft",
    family = "Source Sans 3",
    fontface = "bold",
    color = "white"
  ) +
  guides(fill = "none") +
  labs() +
  # scale_fill_metro(na.value = "grey60")+
  scale_fill_cbp(na.value = "grey60")

ggs(
  plot = swb_tree_plot,
  category = "encounters",
  subset = "swb",
  demographics = NULL,
  charttype = "tree",
  folder = "mu_charts",
  width = 280,
  height = 170
)
```

```{r SWB_stream}
cbpa <- swb |>
  select(
    citizenship,
    date,
    encounter_count
  ) |>
  mutate(citizenship = str_to_title(citizenship)) %>%
  mutate(citizenship = case_when(
    citizenship %in% c("Honduras", "El Salvador", "Guatemala") ~ "Northern\nCentral America",
    citizenship %in% c("Cuba", "Nicaragua", "Venezuela", "Haiti") ~ "CHNV\nCountries",
    citizenship %in% c(
      "Mexico"
    ) ~ citizenship,
    T ~ "Other"
  )) %>%
  mutate(citizenship = str_to_upper(citizenship)) %>%
  mutate(totenc = sum(encounter_count)) |>
  summarise(across(encounter_count, sum), .by = c(citizenship, date)) |>
  mutate(freq = encounter_count / sum(encounter_count), .by = date) %>%
  mutate(citizenship = fct_reorder(citizenship, freq, sum, .desc = F)) %>%
  mutate(csum = sum(freq, na.rm = T), .by = c(date))

cbpa_stream <- cbpa %>%
  ggplot(aes(
    x = date,
    y = encounter_count,
    fill = citizenship
  )) +
   theme_usaid_blue(
    caption = paste0(cap$swb_alt,
                     ". Areas are smoothed.",
                     "Right axis labels refer to share of encounters for the most recent date."),
    title = "Share of Migrants Apprehended at the U.S. Southwest Border",
    subtitle = paste(
      month(range(cbpa$date)[1], label = TRUE, abbr = TRUE),
      year(range(cbpa$date)[1]),
      "-",
      month(range(cbpa$date)[2], label = TRUE, abbr = TRUE),
      year(range(cbpa$date)[2]
           )
    ),
    rf = F,
    main_color_1 = main_color_1,
    base_size = 20,
    bl = F
  )+
  geom_stream(
    type = "proportional", color = "black",
    alpha = .7,
    bw = .65
  ) +
  geom_stream_label(aes(label = citizenship),
    family = "Source Sans 3",
    fontface = "bold",
    type = "proportional",
    bw = .5,
    size = 5,
    color = "black"
  ) +
  theme_usaid_blue(
    caption = paste0(cap$swb_alt, "<br>Areas are smoothed. Right axis labels refer to share of encounters for the most recent date."),
    title = "Share of Migrants Apprehended at the U.S. Southwest Border",
    subtitle = paste(
      "Monthly Encounters |",
      month(range(cbpa$date)[1], label = TRUE, abbr = TRUE),
      year(range(cbpa$date)[1]),
      "-",
      month(range(cbpa$date)[2], label = TRUE, abbr = TRUE),
      year(range(cbpa$date)[2]
           )
    ),
    rf = F,
    main_color_1 = main_color_1,
    base_size = 20,
    bl = F
  ) +
  scale_x_date(
    breaks = (tm_db(month2,
      year0 = 2020,
      n = 1
    ) %>% sort())[1:14],
    date_labels = "%b '%y"
  ) +
  scale_y_continuous(
    breaks = seq(0, 1, length.out = 5),
    labels = label_percent()
  ) +
  scale_fill_cbp() +
  scale_color_cbp() +
  guides(color = "none", fill = "none") +
  geom_rangeframe(position = "stack", sides = "b") +
  theme(
    legend.position = "none",
    legend.title = element_markdown(),
    axis.ticks.y = element_blank(),
    plot.margin = margin(5, 20, 5, 5),
    axis.text.y.right = element_blank(),
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01"), date2 + 50),
    ylim = c(0, 1)
  ) +
  geom_stream_label(
    aes(
      label = round(freq * 100) %>% paste0("%"),
      color = citizenship
    ),
    data = . %>% filter(date > max(date) - 30),
    family = "Gill Sans",
    fontface = "bold",
    type = "proportional",
    bw = .5,
    size = 6,
    position = position_nudge(y = -.1, x = 50)
  ) +
  labs(
    x = NULL,
    y = NULL
  )


ggs(
  plot = cbpa_stream,
  category = "encounters",
  subset = "swb",
  demographics = "cat",
  charttype = "area",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 280,
  height = 170
)
```

```{r SWB_Area}
cbpa <- swb |>
  select(
    citizenship,
    date,
    encounter_count
  ) |>
  mutate(citizenship = str_to_title(citizenship)) %>%
  mutate(citizenship = case_when(
    citizenship %in% c("Honduras", "El Salvador", "Guatemala", "Cuba", "Nicaragua", "Venezuela", "Haiti") ~ citizenship,
    citizenship %in% c(
      "Mexico"
    ) ~ citizenship,
    T ~ "Other"
  )) %>%
  mutate(citizenship = str_to_upper(citizenship)) %>%
  mutate(totenc = sum(encounter_count)) |>
  mutate(
    other = ifelse(citizenship == "OTHER", NA, citizenship),
    subregion = case_when(
      citizenship %in% c("MEXICO") ~ "Mexico",
      citizenship %in% c(nca, "NICARAGUA") ~ "nca",
      citizenship %in% c(
        "VENEZUELA",
        "COLOMBIA",
        "PERU",
        "ECUADOR",
        "BRAZIL"
      ) ~ "sa",
      citizenship %in% c("HAITI", "CUBA") ~ "car",
      T ~ "Other"
    ) %>% as.factor(),
    subregion = fct_relevel(subregion, "Mexico", "nca", "sa", "car", "Other")
  ) %>%
  summarise(across(encounter_count, sum), .by = c(citizenship, date)) |>
  mutate(freq = encounter_count / sum(encounter_count), .by = date) %>%
  mutate(citizenship = fct_reorder(citizenship, freq, sum, .desc = F)) %>%
  mutate(csum = sum(freq, na.rm = T), .by = c(date))

swb_area_plot <- cbpa %>%
  ggplot(aes(
    x = date,
    y = encounter_count,
    fill = citizenship
  )) +
  labs(
    title = "Migrants Encountered at the U.S. Southwest Border",
    subtitle = "**Share of Encounters**",
    y = NULL,
    x = NULL,
    fill = "**Nationality:**"
  ) +
  geom_area(
    # data = . %>% filter(date < date1),
    show.legend = F
  ) +
  # geom_chicklet(
  #   data = . %>%
  #                 mutate(across(citizenship,fct_rev)) %>%
  #                 filter(date >= date1))+
  # coord_cartesian(xlim = as_date(c("2021-01-01", "2024-02-01")))+
  theme_usaid_blue(
    caption = cap$swb_alt, rf = F,
    main_color_1 = main_color_1,
    base_size = 15,
    bl = F
  ) +
  scale_x_date(
    breaks = (tm_db(month2,
      year0 = 2019,
      n = 1
    ) %>% sort())[1:14],
    date_labels = "%b '%y"
  ) +
  # scale_y_continuous(label= label_percent(),breaks = c(.25,.5,.75,1))+
  scale_fill_cbp() +
  scale_color_cbp() +
  guides(color = "none", fill = "none") +
  geom_rangeframe(position = "stack", sides = "b") +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(
      label = citizenship,
      color = citizenship
    ),
    family = "Gill Sans",
    force = 7,
    direction = "y",
    force_pull = .2,
    position = position_stacknudge(
      x = 130,
      vjust = .5,
      direction = "split.y"
    ),
    fontface = "bold",
    segment.linetype = "dotted",
    size = 3.8
  ) +
  theme(
    legend.position = "top",
    legend.title = element_markdown(),
    axis.ticks.y.right = element_blank(),
    axis.text.y.right = element_blank()
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01"), date2 + 350),
    ylim = c(0, 3.5e5)
  ) +
  scale_y_continuous(labels = ~ . / 1e3) +
  labs(
    title = "Migrants Encountered at the U.S. Southwest Border",
    subtitle = "Encounters <br> *(Thousands)*",
    y = NULL,
    x = NULL,
    fill = "**Nationality:**"
  ) +
  geom_rangeframe(position = "stack")

ggs(
  plot = swb_area_plot,
  category = "encounters",
  charttype = "area",
  subset = "swb",
  demographics = "top",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r SWB_TS_alltime}
#| eval: false
apps<- read.csv("Encounter Data/apps_hist.csv") %>% 
   t() %>% as_tibble(rownames ="x1") %>% 
  mutate(x1 = str_remove(x1,"X"),
         x1 = str_remove_all(x1,"\\.")) %>% 
  pull(x1)

cbp_hist <- tibble(fiscal_year = apps[1:length(apps)%%2 == 1],
       apps = apps[1:length(apps)%%2 == 0]) %>% 
  mutate(across(c(fiscal_year,apps),as.numeric)) %>% 
  arrange(fiscal_year) %>% 
  filter(fiscal_year < 2020) %>% 
bind_rows(
  cbp_all %>% 
    filter(land_border_region == "Southwest Land Border") %>% 
    summarise(across(encounter_count,sum), .by = fiscal_year) %>% 
  rename(apps = encounter_count)
) %>% 
  arrange(fiscal_year) %>% 
  mutate(apps = ifelse(fiscal_year == 2024, apps/9, apps/12))
ggplot(cbp_hist, aes(x = fiscal_year, y = apps))+
#geom_line()+
  theme_usaid_blue(bl = F,base_size = 15,
                   caption = paste(cap$swb_alt,"<br>","<sup>1</sup>Historical records prior to 2007 scoped to U.S. Border Patrol (USBP) apprehensions"))+
  scale_y_continuous(labels = ~./1e3,
                     breaks = seq(0,2.5e5,5e4),
                     #sec.axis = dup_axis(name = "")
                     )+
  scale_x_continuous(breaks = seq(1925,2000,25) %>% c(2024))+
  geom_point(data = . %>% filter(fiscal_year %in% c(2022,2023,2024
                                                    #1954,2000,1986
                                                    )))+
  pmap(list(list(
    #c(1954,2000,1986),
            c(2022,2023,2024)),
       c(
         #0,
         -4),
       c(
         #.5,
         0)),
       ~geom_text_repel(data = . %>% filter(fiscal_year %in% ..1),
             aes(label = round(apps/1e3,1) %>% paste0("M")),
            segment.linetype = "dotted",
            nudge_y = 1e5,
            nudge_x = ..2,
            min.segment.length = ..3))+
  geom_rangeframe(sides = "bl")+
  labs(title = "Migrants Encountered at the U.S. Southwest Border",
       #<sup>1</sup>",
       subtitle = "*Thousands of Encounters (Monthly Average) | 1925 - 2024*",
       y = NULL,
       x = NULL)+
  theme(panel.background = element_rect(fill = background, color = "transparent"),
        plot.background = element_rect(fill = background,color = "transparent"))+
  geom_xspline(
    #width = .5
    )
ggs(filename = "mu_charts/monthly_avg_us.png",height = 125)
```

### Country Level

```{r ts_graph function}

country_ts_graph <- function(country, adjective, breaks = NULL) {
  paste0(breaks[length(breaks)])
  swb2 <- swb |>
    filter(citizenship %in% c(country)) |>
    arrange(date) |>
    summarise(across(encounter_count, sum),.by = c(date, demographic)) |>
    pivot_wider(names_from = demographic, values_from = encounter_count) |>
    mutate(across(c(`UC / Single Minors`, `Accompanied Minors`, `FMUA`), ~ ifelse(is.na(.), 0, .)), ) |>
    pivot_longer(-c(date)) |>
    mutate(
      label = case_when(
        name == "UC / Single Minors" ~ "Unaccompanied\nMinors",
        name == "FMUA" ~ "Family Units",
        T ~ name
      ),
      label = fct_relevel(label, "Accompanied Minors", "Unaccompanied\nMinors", "Family Units", "Single Adults")
    ) |>
    mutate(summig = sum(value),.by = date) %>% 
    filter(label != "Accompanied Minors")
  swb2 |>
    ggplot(aes(x = date, y = value, fill = label)) +
    theme_usaid_blue(
      base_size = 20,
      caption = cap$swb_alt, rf = F, bl = F,
      title = paste(adjective, "Migrant Encounters<br>at the U.S. Southwest Border"),
      subtitle = "Thousands of Monthly Encounters",
    ) +
    coord_cartesian(
      expand = F,
      clip = "off",
      xlim = c(
        as.Date("2019-10-01") - 30,
        as.Date(date2) + 400
      )
    )+
    #geom_panel_lines()+
    geom_chicklet(data = . %>% mutate(across(label, fct_rev))) +
    labs(
      x = NULL,
      y = NULL,
      fill = NULL
    ) +
    scale_y_continuous(
      breaks = breaks,
      labels = label_maxunit()
    ) +
    scale_x_date(breaks = tm_db(month2, n = 1), date_labels = "%b '%y") +
    guides(
      fill = "none",
      color = "none"
    ) +
    scale_fill_manual(
      values = c("Single Adults" = "#15478A",
                 "Family Units" = "#5BB5D5",
                 "Unaccompanied Minors" ="#8C8C91")
    ) +
    scale_color_manual(
      values = c("Single Adults" = "#15478A",
                 "Family Units" = "#5BB5D5",
                 "Unaccompanied Minors" ="#8C8C91")
    ) +
    geom_text_repel(
      position = position_stacknudge(
        x = 80,
        vjust = .5,
        direction = "split.y"
      ),
      data = . %>% filter(
        date == date2,
        label != "Accompanied Minors"
      ),
      hjust = .2,
      segment.linetype = "dotted",
      direction = "y",
      size = 5,
      fontface = "bold",
      family = "Source Sans 3",
      aes(label = label, color = label)
    ) +
    geom_rangeframe(color = "grey50", sides = "bl", position = "stack")
}
```

```{r SWB_Mexico}
mexico_bar_plot <- country_ts_graph("MEXICO", "Mexican",breaks = c(2e4,4e4,6e4,8e4))
ggs(
  plot = mexico_bar_plot,
  category = "encounters",
  charttype = "sbar",
  subset = "swb",
  demographics = "mexico",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)

vz_bar_plot <- country_ts_graph("VENEZUELA", "Venezuelan",breaks = c(2e4,4e4,6e4))
ggs(
  plot = vz_bar_plot,
  category = "encounters",
  charttype = "sbar",
  subset = "swb",
  demographics = "mex",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)

nca_bar_plot <- country_ts_graph(nca, "Northern Central America", breaks = c(2e4,4e4,6e4,8e4))
ggs(
  plot = nca_bar_plot,
  category = "encounters",
  charttype = "sbar",
  subset = "swb",
  demographics = "nca",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)

other_ncam <- distinct(swb,citizenship) %>% 
  filter(!citizenship %in% c("MEXICO",nca)) %>% 
  pull(citizenship)

other_bar_plot <- country_ts_graph(other_ncam, "All Other", breaks = c(4e4,8e4,12e4,16e4))
ggs(
  plot = other_bar_plot,
  category = "encounters",
  charttype = "sbar",
  subset = "swb",
  demographics = "other",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

### Regional TS

```{r NCA}
nca_ltsg <- nca_lts %>%
  mutate(date = as.Date(date)) %>%
  select(-c(fiscal_year, month, year)) %>%
  rename("HONDURAS" = honduras, "EL SALVADOR" = el_salvador, "GUATEMALA" = guatemala) %>%
  filter(date < "2019-10-01") %>%
  pivot_longer(-date, names_to = "citizenship", values_to = "encounter_count") %>%
  bind_rows(swb %>% select(date, citizenship, encounter_count) %>%
    filter(citizenship %in% c("HONDURAS", "GUATEMALA", "EL SALVADOR")) %>%
    summarise(across(encounter_count, sum), .by = c(date, citizenship))) |>
  mutate(year = year(date)) %>%
  complete(date, citizenship, fill = list(encounter_count = 0)) %>%
  mutate(across(encounter_count, ~ ifelse(citizenship == "MEXICO" & . == 0, NA, .)))
# summarise(across(encounter_count,sum), .by = date) %>%
nca_ltsg_plot <- nca_ltsg %>%
  ggplot(aes(
    x = date, y = encounter_count,
    color = citizenship
  )) +
  theme_usaid_blue(caption = cap$swb_alt,
                   title = "Northern Central America Migrant Encounters<br>at the U.S. Southwest Border",
                   subtitle = "Thousands of Monthly Encounters",
                   rf = F,
                   base_size = 20) +
  geom_xspline() +
  # geom_line(position = "stack", color = 'grey70', size = .5)+
  # geom_vline(xintercept = as.Date("2022-01-01"), color = "grey70", linetype = "dotted") +
  labs(
    x = NULL,
    y = NULL,
    fill = "**Nationality:**"
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2017-10-01"), as.Date(date2) + 375)
  ) +
  scale_y_continuous(
    labels = label_maxunit(),
    limits = c(0, max(nca_ltsg$encounter_count))
    # sec.axis = sec_axis(labels = label_number(scale = 1/1000),trans = ~.,
    #                     breaks = seq(2e4,8e4,length.out = 4),
    #                     name = "")
  ) +
  scale_x_date(
    breaks = tm_db(month2, n = 1, year0 = 2018),
    date_labels = "%b '%y",
    minor_breaks = seq.Date(as_date("2017-10-01"), date2, by = "month")
  ) +
  guides(x = guide_axis(minor.ticks = T)) +
  geom_rangeframe(
    color = "grey50", sides = "bl",
    data = . %>% drop_na()
  ) +
  theme(panel.grid.major.y = element_blank()) +
  geom_point(data = . %>% filter(date == date2)) +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(label = str_to_title(citizenship)),
    nudge_x = 160,
    direction = "y",
    force = 3,
    family = "Source Sans 3",
    size = 5,
    fontface = "bold",
    segment.linetype = "dotted"
  ) +
  # facet_wrap(~citizenship,nrow = 3,strip.position = "bottom")+
  # theme(panel.background = element_rect(color = "grey80"),
  #       panel.grid.major.y = element_line(colour = "grey90", linetype = "dotted"))+
  guides(
    fill = guide_legend(direction = "horizontal"),
    color = "none"
  ) +
  theme(axis.minor.ticks.x.bottom = element_line(color = "grey")
        ) +
  scale_color_cbp()
ggs(
  plot = nca_ltsg_plot,
  category = "encounters",
  charttype = "spag",
  subset = "nca",
  demographics = NULL,
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r NCA per cap}
nca_pc_plot <- swb %>%
  select(date, citizenship, encounter_count) %>%
  filter(citizenship %in% c("HONDURAS", "GUATEMALA", "EL SALVADOR", "MEXICO")) %>%
  summarise(across(encounter_count, sum), .by = c(date, citizenship)) |>
  left_join(sup$pop23) %>%
  mutate(percap_count = (encounter_count / pop) * 1e5) %>%
  mutate(across(citizenship,~fct_reorder(.,percap_count))) %>% 
  ggplot(aes(
    x = date, y = percap_count,
    color = citizenship
  )) +
  facet_wrap(~citizenship,scales = "free_x")+
  geom_xspline()+
  gghighlight()+
  theme_usaid_blue(caption = paste0(cap$swb_alt,
                                    "<br> Population Data from World Bank (2024)"),
                   base_size = 20,
                   title = "Per Capita Migrant Encounters at the U.S. Southwest Border",
                   subtitle = "Monthly Encounters per 100,000 Population | Northern Central America and Mexico") +

  labs(
    x = NULL,
    y = NULL,
    fill = "**Nationality:**"
  ) +
  coord_cartesian(
    expand = F, 
    clip = "off",
    xlim = c(
      as.Date("2019-10-01"),
      as.Date(date2) + 350
    )
  ) +
 
  scale_y_continuous(
    
  ) +
  scale_x_date(
    breaks = seq.Date(my(paste(month2, dt$year2-4)), date2, by = "2 years"),
    date_labels = "%b '%y"
  ) +
  geom_rangeframe(color = "grey50", sides = "bl") +
  # geom_flag(data = . %>% filter(date == date2),
  #           aes(country = fips),
  #           size = 3)+
  theme(panel.grid.major.y = element_blank()) +
  geom_point(data = . %>% filter(date == date2)) +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(label = round(percap_count,1)),
    nudge_x = 130,
    direction = "y",
    force = 5,
    size = 4.3,
    fontface = "bold",
    family = "Gill Sans",
    segment.linetype = "dotted"
  ) +
  # facet_wrap(~citizenship,nrow = 3,strip.position = "bottom")+
  # theme(panel.background = element_rect(color = "grey80"),
  #       panel.grid.major.y = element_line(colour = "grey90", linetype = "dotted"))+
  guides(
    fill = guide_legend(direction = "horizontal"),
    color = "none"
  ) +
  theme(plot.subtitle = element_textbox(size = rel(.8))) +
  scale_color_cbp()
ggs(
  plot = nca_pc_plot,
  category = "encounters",
  charttype = "spag",
  subset = "swb",
  demographics = "nca",
  additionalinfo = "pc",
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r NCA top6 other}
top5 <- swb |>
  filter(
    !citizenship %in% c("MEXICO", "EL SALVADOR", "GUATEMALA", "HONDURAS", "OTHER"),
    date == max(date),
  ) %>%
  summarise(across(encounter_count, sum), .by = citizenship) %>%
  slice_max(encounter_count, n = 5) %>%
  pull(citizenship)

top5_other_plot <- swb %>%
  filter(citizenship %in% top5) %>%
  summarise(across(encounter_count, sum),
            .by = c(date,citizenship)
            ) %>%
  mutate(citizenship = fct_reorder(citizenship, encounter_count, sum)) |>
  ggplot(aes(x = date, y = encounter_count, color = citizenship)) +
  theme_usaid_blue(base_size = 20,
                   rf = FALSE,
                   title = "Migrant Encounters at the U.S. Southwest Border",
                   subtitle = "Top 5 Countries For Encounters Outside of Mexico and Northern Central America",
                   caption = cap$swb_alt) +
  facet_wrap(~citizenship, scales = "free_x")+
  
  geom_xspline(size = 1.5) +
  gghighlight(unhighlighted_params = list(linewidth = .5))+
  geom_rangeframe(color = label_color)+
  labs(
    y = NULL,
    x = NULL,
    fill = "**Nationality:**"
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01"), as.Date(date2) + 200)
  ) +
  
  scale_y_continuous(
    breaks = seq(2e4, 6e4, length.out = 3),
    labels = c("20", "40", "60K"),
  ) +
  scale_x_date(
   breaks = seq.Date(my(paste(month2, dt$year2-4)), date2, by = "2 years"),
    date_labels = "%b '%y"
  ) +
  geom_point(data = . %>% filter(date == date2)) +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(label = round(encounter_count/1e3,1) %>% paste0("K")),
    nudge_x = 100,
    direction = "y",
    force = 2,
    size = 5,
    fontface = "bold",
    segment.linetype = "dotted"
  ) +
  guides(
    fill = guide_legend(direction = "horizontal"),
    color = "none"
  ) +
  theme() +
  scale_color_cbp()

ggs(
  plot = top5_other_plot,
  category = "encounters",
  charttype = "spag",
  subset = "swb",
  demographics = "top5other",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r top5 other facet}
#| eval: false
top5 <- swb |>
  filter(
    !citizenship %in% c("MEXICO", "EL SALVADOR", "GUATEMALA", "HONDURAS", "OTHER"),
    fiscal_year == 2023
  ) %>%
  summarise(across(encounter_count, sum), .by = citizenship) %>%
  slice_max(encounter_count, n = 5) %>%
  pull(citizenship)

top5_other_plot <- swb %>%
  filter(citizenship %in% top5) %>%
  summarise(across(encounter_count, sum),
    .by = c(date, year, month_abbv, citizenship)
  ) |>
  # left_join(cc_raw |> select(citizenship = official_name_en, fips = iso3166_1_alpha_2)) |>
  # mutate(fips = fips |> tolower()) |>
  mutate(citizenship = fct_reorder(citizenship, encounter_count, sum) %>% fct_rev()) |>
  arrange(citizenship) %>%
  ggplot(aes(x = date, y = encounter_count, color = citizenship)) +
  theme_usaid_blue(
                   base_size = 20, 
                   title = "Migrant Encounters at the U.S. Southwest Border",
    subtitle = "Top 5 Countries Outside of Mexico and Northern Central America",
    caption = cap$swb_alt,
    rf = F, bl = F)+
  geom_xspline() +
  facet_wrap(~citizenship) +
  gghighlight() +
  labs(
    y = NULL,
    x = NULL,
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01"), as.Date(date2) + 300)
  ) +
  scale_y_continuous(
    breaks = seq(2e4, 6e4, length.out = 3),
    labels = c("20", "40", "60K"),
    # sec.axis = sec_axis(labels = label_number(scale = 1/1000),trans = ~.,
    #                     breaks = seq(2e4,8e4,length.out = 4),
    #                     name = "")
  ) +
  scale_x_date(
    breaks = tm_dby(date2, 2),
    date_labels = "%b '%y"
  ) +
  geom_rangeframe(color = "grey50", sides = "bl") +
  # geom_flag(data = . %>% filter(date == date2),
  #           aes(country = fips),
  #           size = 3)+
  geom_point(data = . %>% filter(date == date2)) +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(label = round(encounter_count / 1e3, 0)),
    nudge_x = 5,
    hjust = 1,
    # direction = "x",
    force = 20,
    size = 5,
    fontface = "bold",
    segment.linetype = "dotted"
  ) +
  # facet_wrap(~citizenship,nrow = 3,strip.position = "bottom")+
  # theme(panel.background = element_rect(color = "grey80"),
  #       panel.grid.major.y = element_line(colour = "grey90", linetype = "dotted"))+
  guides(
    fill = guide_legend(direction = "horizontal"),
    color = "none"
  ) +
  theme() +
  scale_color_cbp()
si_preview()
ggs(
  plot = top5_other_plot,
  category = "encounters",
  charttype = "spag",
  subset = "swb",
  demographics = "top5other",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r TOP 5 per cap}
top5 <- swb |>
  filter(
    !citizenship %in% c("MEXICO", "EL SALVADOR", "GUATEMALA", "HONDURAS", "OTHER"),
    fiscal_year == 2023
  ) %>%
  summarise(across(encounter_count, sum), .by = citizenship) %>%
  slice_max(encounter_count, n = 5) %>%
  pull(citizenship)
us_other5pc_ts <- swb %>%
  select(date, citizenship, encounter_count) %>%
  filter(citizenship %in% top5) %>%
  summarise(across(encounter_count, sum), .by = c(date, citizenship)) |>
  left_join(sup$pop23) %>%
  mutate(percap_count = (encounter_count / pop) * 1e5) %>%
   mutate(citizenship = fct_reorder(citizenship, percap_count, sum)) |>
  ggplot(aes(
    x = date, y = percap_count,
    color = citizenship
  )) +
   theme_usaid_blue(base_family = "Source Sans 3",
                    title = "Per Capita Migrant Encounters at the U.S. Southwest Border",
                     subtitle = "Top 5 Countries Outside of Mexico and Northern Central America <br> Monthly Encounters Per 100,000 Population",
                    caption = paste(cap$swb_alt,
                                    "<br> Population Data from World Bank (2024)"),
                    rf = F,
                    base_size = 20) +
   facet_wrap(~citizenship,scales = "free")+
  geom_xspline() +
  gghighlight()+
  labs(
   
    x = NULL,
    
    y = NULL,
    fill = "**Nationality:**"
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(
      as.Date("2019-10-01"),
      as.Date(date2) + 375
    )
  ) +
 
  scale_y_continuous(
    breaks = c(100,300,500)
  ) +
  scale_x_date(
    breaks = seq.Date(my(paste(month2, dt$year2-4)), date2, by = "2 years"),
    date_labels = "%b '%y"
  ) +
  geom_rangeframe(color = "grey50", sides = "bl") +
  # geom_flag(data = . %>% filter(date == date2),
  #           aes(country = fips),
  #           size = 3)+
  theme(panel.grid.major.y = element_blank()) +
  geom_point(data = . %>% filter(date == date2)) +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(label = round(percap_count,1)),
    nudge_x = 150,
    direction = "y",
    force = 3,
    size = 3.7,
    fontface = "bold",
    family = "Source Sans 3",
    segment.linetype = "dotted"
  ) +
  
  # theme(panel.background = element_rect(color = "grey80"),
  #       panel.grid.major.y = element_line(colour = "grey90", linetype = "dotted"))+
  guides(
    fill = guide_legend(direction = "horizontal"),
    color = "none"
  ) +
  theme() +
  scale_color_cbp()
ggs(
  plot = us_other5pc_ts,
  category = "encounters",
  charttype = "spag",
  subset = "swb",
  demographics = "top5other",
  additionalinfo = "pc",
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r CHNV}

chnv_dates <- tibble(citizenship = chnv,
                     chnv_date = c("2023-01-01", "2023-01-01", "2022-10-01", "2023-01-01")
                     )


chnv_plot <- cbp_all |>
  filter(
    citizenship %in% c("CUBA", "NICARAGUA", "VENEZUELA", "HAITI"),
    #land_border_region == "Southwest Land Border" | component == "Office of Field Operations"
  ) %>%
  summarise(across(encounter_count, sum),.by = c(date, citizenship,component)) %>%
  mutate(citizenship = fct_reorder(citizenship, encounter_count, sum)) |>
  ggplot(aes(x = date, y = encounter_count, color = component)) +
  theme_usaid_blue(title = "Migrants Encountered At All U.S. Borders",
                   subtitle = "Thousands of Monthly Encounters <span style = 'color:#103366'>At Ports of Entry</span> and <span style = color:#5C763D>Between Ports of Entry</span>",
                   caption = cap$swb_alt,
                   main_color_1 = title_color,
                   rf = F, bl = F, 
                   base_size = 20) +
  geom_xspline() +
  facet_wrap(~citizenship,scales = "free_x") +
  labs(
    y = NULL,
    x = NULL,
    color = NULL,
    fill = NULL,
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01"), 
             as.Date(date2) + 200)
  ) +
  scale_y_continuous(
    labels = label_number(scale = 1 / 1000),
  ) +
  scale_x_date(
    breaks =  seq.Date(my(paste(month2, dt$year2-4)), date2, by = "2 years"),
    date_labels = "%b '%y"
  ) +
  geom_rangeframe(color = "grey50", sides = "bl") +
  geom_point(data = . %>% filter(date == date2)) +

  guides(fill = "none",
         color = "none") +
  scale_color_manual(
    values = c("Office of Field Operations" = ofohex,
               "U.S. Border Patrol" = usbphex
               ),
    labels = c("At Ports of Entry",
               "Between Ports of Entry")) +
  theme(
    legend.position = "top",
    legend.text = element_markdown()
  )+
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(label = round(encounter_count/1e3,1) %>% 
          paste0("K")),
    nudge_x = 150,
    direction = "y",
    force = 3,
    size = 3.7,
    fontface = "bold",
    family = "Source Sans 3",
    segment.linetype = "dotted"
  )


ggs(
  plot = chnv_plot,
  category = "encounters",
  charttype = "facet",
  subset = "swb",
  demographics = "chnv",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r}
chnv_ven_plot <- cbp_all |>
  filter(
    citizenship %in% c(
      "CUBA"
      # "NICARAGUA"
      # "VENEZUELA"
      # "HAITI"
    ),
    #       land_border_region == "Southwest Land Border" | component == "Office of Field Operations"
  ) %>%
  # mutate(across(citizenship,str_to_title)) |>
  group_by(date, year, month_abbv, citizenship, component) |>
  summarise(across(encounter_count, sum)) %>%
  mutate(citizenship = fct_reorder(citizenship, encounter_count, sum)) |>
  ggplot(aes(x = date, y = encounter_count, color = component)) +
  geom_xspline() +
  # facet_wrap(~citizenship)+

  labs(
    y = "Monthly Encounters <br> *(Thousands)*",
    x = NULL,
    color = "",
    title = " Cuba Migrant Encounters | All U.S. Borders",
    fill = "**Nationality:**"
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01"), as.Date(date2) + 200)
  ) +
  theme_usaid_blue(base_family = "Gill Sans", caption = cap$swb_alt, rf = F, bl = F, base_size = 18) +
  scale_y_continuous(
    labels = label_number(scale = 1 / 1000),
    # breaks = seq(1e4,5e4,length.out = 5),
    # sec.axis = sec_axis(labels = label_number(scale = 1/1000),trans = ~.,
    #                     breaks = seq(2e4,8e4,length.out = 4),
    #                     name = "")
  ) +
  scale_x_date(
    breaks = tm_db(month2, year0 = 2019, n = 1),
    date_labels = "%b '%y"
  ) +
  geom_rangeframe(color = "grey50", sides = "bl") +
  # geom_flag(data = . %>% filter(date == date2),
  #           aes(country = fips),
  #           size = 3)+
  geom_point(data = . %>% filter(date == date2)) +
  # geom_text_repel(data = . %>% filter(date == date2),
  #                 aes(label = citizenship),
  #                 nudge_x = 1500,
  #                 size = 3,
  #                 hjust = 1,
  #                 #direction = "x",
  #                 force = 20,
  #                 family = "Gill Sans",
  #                 segment.linetype = "dotted") +
  # facet_wrap(~citizenship,nrow = 3,strip.position = "bottom")+
  # theme(panel.background = element_rect(color = "grey80"),
  #       panel.grid.major.y = element_line(colour = "grey90", linetype = "dotted"))+
  guides(fill = guide_legend(direction = "horizontal"), ) +
  scale_color_metro(labels = c("At Ports of Entry", "Between Ports of Entry (Southwest Border)")) +
  theme(
    legend.position = "top",
    legend.text = element_markdown()
  ) +
  geom_vline(xintercept = as.Date("2023-01-01"), color = "grey70", linetype = "dotted")


ggs(
  plot = chnv_ven_plot,
  category = "encounters",
  charttype = "facet",
  subset = "swb",
  demographics = "chnv",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

## Tables

```{r table prep v2}
fy <- 2024
fytd_nums <- swb %>%
  filter(year >= fy) %>%
  distinct(date = month(date)) %>%
  pull(date)
sltj_totals <- swb |>
  mutate(fiscal_year = year) %>% # CHANGE TO CAL YEAR
  filter(
    fiscal_year >= 2021,
    land_border_region == "Southwest Land Border",
  ) |>
  summarise(across(encounter_count, sum), .by = c(date, fiscal_year)) %>%
  mutate(
    encounter = sum(encounter_count[fiscal_year == fy], na.rm = T),
    mencounter = mean(encounter_count[fiscal_year == fy], na.rm = T),
    encounter_ly_ftd = sum(encounter_count[fiscal_year == fy - 1 & month(date) %in% fytd_nums])
  ) %>%
  summarise(across(encounter_count, sum), .by = c(date, encounter, mencounter, encounter_ly_ftd)) %>%
  mutate(
    lastm = ifelse(is.null(encounter_count[date == date2]),
      NA,
      encounter_count[date == date2]
    ),
    last2m = ifelse(is.null(encounter_count[date == date1]),
      NA,
      encounter_count[date == date1]
    ),
    # last1y = ifelse(is.null(encounter_count[month(date) == month(date1) &
    #                                           year(date) == year(date1)-1]),
    #                 NA,
    #                 encounter_count[month(date) == month(date1) &
    #                                           year(date) == year(date1)-1])
  ) %>%
  arrange(date) |>
  group_by(lastm, last2m, encounter, mencounter, encounter_ly_ftd) |>
  summarise(
    spark = list(encounter_count), .groups = "drop",
    # trend = sparkline(encounter_count, type = "line")
  ) %>%
  mutate(eb = NA) %>%
  arrange(-encounter) |>
  slice_max(encounter, n = 12) |>
  mutate(
    citizenship = "Total",
    # change = lastm-last2m,
    pct_change_m = (lastm - last2m) / last2m,
    pct_change_y = (encounter - encounter_ly_ftd) / encounter_ly_ftd
  ) |>
  select(-c(last2m))

sltj <- swb |>
  mutate(fiscal_year = year) %>%
  filter(
    fiscal_year >= 2021,
    land_border_region == "Southwest Land Border",
    # citizenship != "OTHER",
  ) |>
  summarise(across(encounter_count, sum), .by = c(date, citizenship, fiscal_year)) %>%
  mutate(
    encounter = sum(encounter_count[fiscal_year == fy]),
    mencounter = mean(encounter_count[fiscal_year == fy]),
    encounter_ly_ftd = sum(encounter_count[fiscal_year == fy - 1 & month(date) %in% fytd_nums]),
    .by = citizenship
  ) %>%
  group_by(citizenship, date, encounter, mencounter, encounter_ly_ftd) %>%
  summarise(across(encounter_count, sum)) %>%
  group_by(citizenship) %>%
  mutate(
    lastm = ifelse(is.null(encounter_count[date == date2]),
      NA,
      encounter_count[date == date2]
    ),
    last2m = ifelse(is.null(encounter_count[date == date1]),
      NA,
      encounter_count[date == date1]
    ),
    # last1y = ifelse(is.null(encounter_count[month(date) == month(date1) &
    #                                           year(date) == year(date1)-1]),
    #                 NA,
    #                 encounter_count[month(date) == month(date1) &
    #                                           year(date) == year(date1)-1])
  ) |>
  arrange(date) |>
  ungroup() %>%
  summarise(
    spark = list(encounter_count),
    .by = c(citizenship, lastm, last2m, encounter, encounter_ly_ftd, mencounter)
    # trend = sparkline(encounter_count, type = "line")
  ) %>%
  mutate(eb = encounter) %>%
  arrange(-encounter) |>
  slice_max(encounter, n = 12) |>
  mutate(
    citizenship = str_to_title(citizenship),
    # change = lastm-last2m,
    pct_change_m = (lastm - last2m) / last2m,
    pct_change_y = (encounter - encounter_ly_ftd) / encounter_ly_ftd
  ) |>
  select(-c(last2m)) %>%
  bind_rows(sltj_totals) %>%
  mutate(fact = round(lastm / mencounter, 1)) %>%
  arrange(-encounter)
```

```{r table prep darien v2}
fy <- 2024
fytd_nums <- dar %>%
  mutate(fiscal_year = fiscal_year(date)) %>%
  mutate(fiscal_year = year(date)) %>% # swich to CAL
  filter(fiscal_year >= fy) %>%
  distinct(date = month(date)) %>%
  pull(date)
dar_tot <- dar |>
  rename(encounter_count = encounter_count) %>%
  mutate(
    year = year(date),
    month = month(date, label = T),
    fiscal_year = ifelse(month %in% c("Oct", "Nov", "Dec"), year + 1, year)
  ) |>
  mutate(fiscal_year = year) %>% # CHANGE TO CAL YEAR
  filter(fiscal_year >= 2021) |>
  summarise(across(encounter_count, sum),
    .by = c(date, fiscal_year)
  ) %>%
  mutate(
    lastm = ifelse(is.null(encounter_count[date == date2]), NA, encounter_count[date == date2]),
    last2m = ifelse(is.null(encounter_count[date == date1]), NA, encounter_count[date == date1]),
    change = lastm - last2m,
    pct_change = (lastm - last2m) / last2m
  ) %>%
  arrange(date) %>%
  summarise(
    spark = list(encounter_count),
    encounter = sum(encounter_count[fiscal_year == fy]),
    mencounter = mean(encounter_count[fiscal_year == fy]),
    encounter_ly_ftd = sum(encounter_count[fiscal_year == fy - 1 & month(date) %in% fytd_nums]),
    # change = mean(change),
    pct_change_m = mean(pct_change),
    lastm = mean(lastm),
    eb = NA,
    citizenship = "Total"
  ) %>%
  mutate(pct_change_y = (encounter - encounter_ly_ftd) / encounter_ly_ftd)

sltj_dar <- dar |>
  rename(encounter_count = encounter_count) %>%
  mutate(
    citizenship = str_to_title(citizenship),
    year = year(date),
    month = month(date, label = T),
    fiscal_year = ifelse(month %in% c("Oct", "Nov", "Dec"), year + 1, year)
  ) |>
  mutate(fiscal_year = year) %>% # change to cal year!!
  filter(
    fiscal_year >= 2021,
    !citizenship %in% c("Otros Paises", "Afghanistan")
  ) |>
  mutate(
    lastm = ifelse(is.null(encounter_count[month == month2]), NA, encounter_count[month == month2]),
    last2m = ifelse(is.null(encounter_count[month == dt$month1]), NA, encounter_count[month == dt$month1]),
    .by = citizenship
  ) |>
  drop_na(lastm, last2m) |>
  select(-c(month, year, country_of_entry)) |>
  pivot_longer(-c(citizenship, date, fiscal_year, lastm, last2m)) |>
  arrange(citizenship) |>
  mutate(
    # change = lastm - last2m,
    pct_change_m = (lastm - last2m) / last2m
  ) |>
  arrange(date) |>
  summarise(
    encounter = sum(value[fiscal_year == fy]),
    mencounter = mean(value[fiscal_year == fy]),
    encounter_ly_ftd = sum(value[fiscal_year == fy - 1 & month(date) %in% fytd_nums]),
    spark = list(value),
    eb = encounter,
    .by = c(
      citizenship,
      # change,
      pct_change_m, lastm
    )
  ) |>
  mutate(pct_change_y = (encounter - encounter_ly_ftd) / encounter_ly_ftd) %>%
  slice_max(encounter, n = 10) |>
  mutate(
    encounter = as.integer(encounter),
    citizenship = str_remove_all(citizenship, fixed("(1)")) |> str_trim(),
    citizenship = case_when(
      citizenship == "Brasil" ~ "Brazil",
      citizenship == "Camerun" ~ "Cameroon",
      citizenship == "Afganistan" ~ "Afghanistan",
      citizenship == "Rep. Dominicana" ~ "Dominican Republic",
      T ~ citizenship
    )
  ) %>%
  bind_rows(dar_tot) %>%
  mutate(fact = round(lastm / mencounter, 1)) %>%
  arrange(-encounter)
```

```{r table prep mex v2}
mex_tot <- mex %>%
  rename(encounter_count = encounter_count) %>%
  mutate(
    year = year(date),
    month = month(date, abbr = T, label = T),
    fiscal_year = ifelse(month %in% c("Oct", "Nov", "Dec"), year + 1, year),
    month = str_to_title(month)
  ) |>
  mutate(fiscal_year = year) %>%
  filter(fiscal_year >= 2021) %>%
  group_by(date, fiscal_year) %>%
  summarise(across(encounter_count, sum)) %>%
  ungroup() %>%
  mutate(
    lastm = ifelse(is.null(encounter_count[date == dt$date2]), NA, encounter_count[date == dt$date2]),
    last2m = ifelse(is.null(encounter_count[date == dt$date1]), NA, encounter_count[date == dt$date1])
  ) %>%
  summarise(
    spark = list(encounter_count),
    encounter = sum(encounter_count[fiscal_year == fy]),
    mencounter = mean(encounter_count[fiscal_year == fy]),
    encounter_ly_ftd = sum(encounter_count[fiscal_year == fy - 1 & month(date) %in% fytd_nums]),
    # change = mean(change),
    # pct_change = mean(pct_change),
    lastm = mean(lastm),
    last2m = mean(last2m),
    eb = NA,
    citizenship = "Total"
  ) %>%
  mutate(
    change = lastm - last2m,
    pct_change_m = change / last2m,
    pct_change_y = (encounter - encounter_ly_ftd) / encounter_ly_ftd
  )


sltj_mex <- mex |>
  rename(encounter_count = encounter_count) %>%
  select(-country_of_entry) %>%
  mutate(
    year = year(date),
    month = month(date, abbr = T, label = T),
    fiscal_year = ifelse(month %in% c("Oct", "Nov", "Dec"), year + 1, year),
    month = str_to_title(month)
  ) |>
  group_by(citizenship) |>
  mutate(fiscal_year = year) %>%
  filter(
    fiscal_year > 2020,
    !citizenship %in% c("Otros Paises", "Afganistan", "Albania")
  ) %>%
  mutate(
    lastm = ifelse(is.null(encounter_count[date == dt$date2]), NA, encounter_count[date == dt$date2]),
    last2m = ifelse(is.null(encounter_count[date == dt$date1]), NA, encounter_count[date == dt$date1])
  ) %>%
  drop_na(lastm, last2m) |>
  select(-c(month, year)) %>%
  pivot_longer(-c(citizenship, date, fiscal_year, lastm, last2m)) |>
  arrange(citizenship) |>
  group_by(citizenship, lastm, last2m) |>
  arrange(date) |>
  summarise(
    encounter = sum(value[fiscal_year == fy]),
    encounter_ly_ftd = sum(value[fiscal_year == fy - 1 & month(date) %in% fytd_nums]),
    mencounter = mean(value[fiscal_year == fy]),
    spark = list(value),
    eb = encounter
  ) |>
  mutate(
    change = lastm - last2m,
    pct_change_m = change / last2m,
    pct_change_y = (encounter - encounter_ly_ftd) / encounter_ly_ftd
  ) |>
  ungroup() |>
  slice_max(encounter, n = 12) |>
  mutate(
    encounter = as.integer(encounter),
    citizenship = str_remove_all(citizenship, fixed("(1)")) |> str_trim(),
    citizenship = str_to_title(citizenship),
    citizenship = case_when(
      citizenship == "Brasil" ~ "Brazil",
      citizenship == "Camerun" ~ "Cameroon",
      citizenship == "Afganistan" ~ "Afghanistan",
      citizenship == "Republica Dominicana" ~ "Dominican Republic",
      T ~ citizenship
    )
  ) %>%
  bind_rows(mex_tot) %>%
  mutate(fact = round(lastm / mencounter, 1)) %>%
  arrange(-encounter)
```

```{r table prep honduras v2}
#| eval: false
fy <- 2024
hnd_tot <- hnd |>
  mutate(
    year = year(date),
    month = month(date, label = T),
    fiscal_year = ifelse(month %in% c("Oct", "Nov", "Dec"), year + 1, year)
  ) |>
  # mutate(fiscal_year = year) %>% # CHANGE TO CAL YEAR
  filter(fiscal_year >= 2021) |>
  rename(encounter_count = encounter_count) %>%
  summarise(across(encounter_count, sum),
    .by = c(date, fiscal_year)
  ) %>%
  mutate(
    lastm = ifelse(is.null(encounter_count[date == date2]), NA, encounter_count[date == date2]),
    last2m = ifelse(is.null(encounter_count[date == date1]), NA, encounter_count[date == date1]),
    change = lastm - last2m,
    pct_change = (lastm - last2m) / last2m
  ) %>%
  arrange(date) %>%
  summarise(
    spark = list(encounter_count),
    encounter = sum(encounter_count[fiscal_year == fy]),
    mencounter = mean(encounter_count[fiscal_year == fy]),
    encounter_ly_ftd = sum(encounter_count[fiscal_year == fy - 1 & month(date) %in% fytd_nums]),
    # change = mean(change),
    pct_change_m = mean(pct_change),
    lastm = mean(lastm),
    eb = NA,
    citizenship = "Total"
  ) %>%
  mutate(pct_change_y = (encounter - encounter_ly_ftd) / encounter_ly_ftd)
dar_tot
sltj_hnd <- hnd |>
  rename(
    encounter_count = encounter_count,
    citizenship = nationality
  ) %>%
  mutate(
    citizenship = str_to_title(citizenship),
    year = year(date),
    month = month(date, label = T),
    fiscal_year = ifelse(month %in% c("Oct", "Nov", "Dec"), year + 1, year)
  ) |>
  # mutate(fiscal_year = year) %>% #change to cal year!!
  filter(
    fiscal_year >= 2021,
    !citizenship %in% c("Otros Paises", "Afghanistan")
  ) |>
  mutate(
    lastm = ifelse(is.null(encounter_count[month == month2]), NA, encounter_count[month == month2]),
    last2m = ifelse(is.null(encounter_count[month == dt$month1]), NA, encounter_count[month == dt$month1]),
    .by = citizenship
  ) |>
  drop_na(lastm, last2m) |>
  select(-c(month, year)) |>
  pivot_longer(-c(citizenship, date, fiscal_year, lastm, last2m)) |>
  arrange(citizenship) |>
  mutate(
    # change = lastm - last2m,
    pct_change_m = (lastm - last2m) / last2m
  ) |>
  arrange(date) |>
  summarise(
    encounter = sum(value[fiscal_year == fy]),
    mencounter = mean(value[fiscal_year == fy]),
    encounter_ly_ftd = sum(value[fiscal_year == fy - 1 & month(date) %in% fytd_nums]),
    spark = list(value),
    eb = encounter,
    .by = c(
      citizenship,
      # change,
      pct_change_m, lastm
    )
  ) |>
  mutate(pct_change_y = (encounter - encounter_ly_ftd) / encounter_ly_ftd) %>%
  slice_max(encounter, n = 10) |>
  mutate(
    encounter = as.integer(encounter),
    citizenship = str_remove_all(citizenship, fixed("(1)")) |> str_trim(),
    citizenship = case_when(
      citizenship == "Brasil" ~ "Brazil",
      citizenship == "Camerun" ~ "Cameroon",
      citizenship == "Afganistan" ~ "Afghanistan",
      citizenship == "Rep. Dominicana" ~ "Dominican Republic",
      T ~ citizenship
    )
  ) %>%
  bind_rows(hnd_tot) %>%
  mutate(fact = round(lastm / mencounter, 1)) %>%
  arrange(-encounter)
```

```{r table print v2}
mig_tables <- pmap(
  list(
    list(
      sltj,
      sltj_dar,
      sltj_mex
      # ,sltj_hnd
    ),
    c(
      "U.S. Southwest Border",
      "Darien Region",
      "Mexican Authorities"
      # ,"Honduras"
    ),
    c(
      main_color_1,
      main_color_2,
      "darkgreen"
      # ,"darkorange"
    ),
    # caption
    c(
      cap$swb_alt,
      cap$dar,
      "Data from GOM, data recorded as migrant events"
      # ,"Data from GOH"
    ),
    c(
      rep(month2, 2),
      month2
      # ,month2
    ),
    c(
      rep(dt$month1, 2),
      dt$month1
      # ,month1
    )
  ),
  ~ mutate(..1, citizenship = ifelse(str_detect(citizenship, "China"), "China", citizenship)) %>%
    left_join(sup$cflag) |>
    select(
      img, citizenship, encounter, lastm, mencounter, spark,
      pct_change_y, pct_change_m, fact,
    ) %>%
    mutate(across(citizenship, ~ fct_reorder(., encounter) %>% fct_relevel("Other", after = 0))) %>%
    arrange(desc(citizenship)) %>%
    gt() %>%
    data_color(pct_change_m,
      colors = scales::col_bin(
        bins = c(-Inf, 0, Inf),
        palette = c("#c7e9ff", "white", "#ffdfd9"),
        # domain = range(change)
      )
    ) |>
    data_color(pct_change_y,
      colors = scales::col_bin(
        bins = c(-Inf, 0, Inf),
        palette = c("#c7e9ff", "white", "#ffdfd9"),
        # domain = range(change)
      )
    ) %>%
    cols_hide(c(fact, pct_change_m)) %>%
    gt_plt_sparkline(spark,
      label = T, same_limit = F,
      palette = c("black", rep("transparent", 4))
    ) %>%
    # cols_move(c(spark,lastm),citizenship))
    cols_move_to_start(img) %>%
    tab_spanner(
      columns = c(pct_change_y),
      label = md(paste0("**Pct. Change", "**"))
    ) %>%
    tab_spanner(columns = c(encounter, lastm, mencounter), label = md("**Encounters**")) |>
    tab_spanner(columns = c(spark), label = md("**Trend**")) |>
    fmt_integer(columns = c(
      encounter,
      # change,
      lastm,
      mencounter
    )) %>%
    fmt_percent(
      c(pct_change_y, pct_change_m),
      decimals = 0
    ) %>%
    cols_label(
      citizenship = md("**Nationality**"),
      encounter = md("**CYTD**"),
      img = "",
      mencounter = md("**Mon Avg.**"),
      lastm = md(paste0("**", ..5, "**")),
      spark = md("**CY21-CY24**"),
      # change = md("**Total**"),
      pct_change_y = md(paste0("**", "CY24/CY23 YTD<sup>1</sup>", "**")),
      pct_change_m = md(paste0(""))
    ) %>%
    tab_header(
      subtitle = md("**Top Nationalities for Migrant Encounters**"),
      title = md(paste0("**", ..2, " | ", ..5, " ", dt$year2, "**"))
    ) %>%
    tab_footnote(footnote = paste(
      ..4 |>
        str_replace_all("USAID", "<span style = 'color:#002F6C'>US<span style = color:#BA2D42>AID</span></span>"),
      "<br><sup>1</sup>percent change of the current calendar year-to-date compared to the same months during the previous calendar year"
    ) %>% md()) |>
    opt_table_font("Gill Sans") |>
    tab_options(
      heading.background.color = ..3,
      heading.title.font.size = 20,
      heading.subtitle.font.size = 18
    ) |>
    cols_width(c(pct_change_y) ~ px(130)) %>%
    cols_width(c(pct_change_m) ~ px(80)) |>
    tab_style(
      cell_text(align = "center"),
      cells_body(columns = pct_change_y)
    ) %>%
    tab_style(
      cell_text(size = "small"),
      cells_column_labels(columns = pct_change_y)
    ) %>%
    tab_style(
      cell_text(color = caption_color),
      cells_footnotes()
    ) %>% 
    cols_align_decimal(pct_change_y) %>%
    gt::text_transform(
      locations = cells_body(c(img)),
      fn = function(x) {
        # Return an image of set dimensions
        web_image(
          url = x,
          height = 12
        )
      }
    )
)

#
# save tables if needed
mig_tables[1:3] |>
  walk2(
    c(
      here("Migration Update", "mu_charts", "table_swb.png"),
      here("Migration Update", "mu_charts", "table_dar.png"),
      here("Migration Update", "mu_charts", "table_mex.png")
    ),
    # ,"mu_charts/table_hnd.png"

    ~ gtsave(..1, ..2, )
  )
```

## Darien Graphs

```{r Darien_TS}
dar_tsum <- dar |>
  mutate(
    year = year(date),
    month = month(date, label = T),
    fyear = ifelse(month %in% c("Oct", "Nov", "Dec"), year + 1, year),
    across(month, fct_relevel, c(month.abb[10:12], month.abb[1:9]))
  ) |>
  group_by(fyear, month, date) |>
  arrange(date) |>
  summarise(across(encounter_count, sum)) |>
  ungroup() |>
  filter(fyear > 2020) %>%
  mutate(across(c(fyear), as.factor))

ts_dar_plot <- dar_tsum |>
  filter(date <= date2) %>%
  ggplot(aes(x = date, y = encounter_count)) +
  theme_usaid_blue(
    caption = cap$dar,
    main_color_1 = main_color_2,
    subtitle = paste(
      "Thousands of Monthly Encounters |",
      month(range(dar_tsum$date)[1], label = TRUE, abbr = TRUE),
      year(range(dar_tsum$date)[1]),
      "-",
      month(range(dar_tsum$date)[2], label = TRUE, abbr = TRUE),
      year(range(dar_tsum$date)[2])
    ),
    title = "Migrants Encountered in the Darien Region",
    base_size = 20
  ) +
  coord_cartesian(
    expand = F,
    clip = "off",
    xlim = c(min(dar_tsum$date) - 30, max(dar_tsum$date) + 120),
    ylim = range(dar_tsum$encounter_count) * 1.01
  ) +
  geom_panel_lines() +
  geom_rangeframe(sides = "bl", color = "black") +
  geom_xspline(
    color = main_color_2, spline_shape = .3,
    linewidth = 2
  ) +
  stat_xspline(geom = "area", fill = "pink", alpha = .2) +
  geom_point(
    data = . %>% filter(date == date2),
    color = main_color_2, size = 1
  ) +
  geom_text_repel(
    data = . %>% filter(date == date2),
    color = label_color,
    face = "bold",
    nudge_x = 50,
    size = 5,
    direction = "y",
    fontface = "bold",
    aes(label = round(encounter_count / 1e3, 0) %>% paste0("K"))
  ) +
  labs(
    x = NULL,
    y = NULL,
  ) +
  # theme(panel.grid.major.y = element_blank())+
  scale_y_continuous(
    breaks = seq(2e4, 8e4, 2e4),
    labels = c(20, 40, 60, "80K"),
    limits = c(0, 9e4),
    expand = c(0, 0)
  ) +
  scale_x_date(
    breaks = tm_db(month2, n = 1), date_labels = "%b '%y",
    minor_breaks = seq.Date(min(swb_tsum$date), date2, by = "month")
  ) +
  guides(
    color = "none"
  )

ggs(
  plot = ts_dar_plot,
  category = "encounters",
  charttype = "ts",
  subset = "dar",
  demographics = NULL,
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r Darien_TS2}
#| eval: false

dar_tsum <- dar |>
  mutate(
    year = year(date),
    month = month(date, label = T),
    month_num = month(date),
    across(month_num, ~ ifelse(. >= 10, . - 12, .)),
    fyear = fiscal_year(date),
    across(c(month), fct_relevel, c(month.abb[10:12], month.abb[1:9])),
    # across(month_num,~fct_reorder(.,month))
  ) |>
  arrange(date) |>
  summarise(across(encounter_count, sum), .by = c(fyear, date, month, month_num)) |>
  filter(fyear > 2020) %>%
  mutate(across(c(fyear), as.factor)) %>%
  arrange(month_num)

dar_tsum |>
  ggplot(aes(x = month_num, y = encounter_count, color = factor(fyear))) +
  # stat_xspline(color = main_color_2,spline_shape = .1,
  #              geom =  "area", fill = grad_ungroup)+
  geom_xspline(
    # color = main_color_2,
    spline_shape = .3,
    linewidth = 2
  ) +
  geom_point(
    data = . %>% filter(month_num == max(month_num), .by = fyear),
    # color = main_color_2,
    size = 1
  ) +
  labs(
    x = NULL,
    y = NULL,
    subtitle = "Monthly Encounters <br> *(Thousands)*",
    title = "Migrants Encountered in the Darien Gap"
  ) +
  theme_usaid_blue(
    caption = "Data from Government of Panama | chart created by USAID/LAC <br> Right-axis rug shows encounters since FY23",
    main_color_1 = main_color_2,
    rf = F, bl = F,
    base_size = 15
  ) +
  # theme(panel.grid.major.y = element_blank())+
  scale_y_continuous(
    breaks = c(
      min(dar_tsum$encounter_count),
      dar_tsum$encounter_count[which(dar_tsum$date == date2)],
      max(dar_tsum$encounter_count)
    ),
    sec.axis = dup_axis(name = ""),
    labels = ~ floor(. / 1e3),
    limits = c(0, 9e4)
  ) +
  # guides(x = guide_axis(minor.ticks = T))+
  # scale_x_date(breaks = tm_db(month2, n = 1), date_labels = "%b '%y",
  #              minor_breaks = "month")
  scale_x_continuous(
    breaks = -2:9,
    labels = c(month.abb[10:12], month.abb[1:9])
  ) +
  # geom_segment(aes(x = date2,
  #                  xend = date2+30,
  #                  y = encounter_count[which(date == date2)],
  #                  yend = encounter_count[which(date == date2)]),
  #              inherit.aes = F,
  #              linetype = "dotted",
  #              color = "grey",
  #              data = . %>% filter(date == date2),)+
  geom_rangeframe(sides = "br", color = "black") +
  scale_color_metro() +
  guides(color = "none") +
  coord_cartesian(
    expand = F,
    clip = "off",
    xlim = c(-2, 9.5),
    ylim = range(dar_tsum$encounter_count) * 1.01
  ) +
  theme(
    axis.text.y.left = element_blank(),
    axis.ticks.y.left = element_blank()
  ) +
  geom_rug(
    sides = "r", length = unit(0.01, "npc"),
    data = . %>% filter(fiscal_year(date) >= 2023)
  )
ggs(filename = "mu_charts/ts_dar.jpg")
```

```{r Darien_Tree_Month}
tree_dar_plot <- dar |>
  mutate(
    year = year(date),
    month = month(date),
    fiscal_year = ifelse(month >= 10, year + 1, year)
  ) %>%
  filter(
    # date == date2
    year == 2024
  ) |>
  # mutate(citizenship = ifelse(citizenship %in% non_lac, "OTHER", citizenship),
  #        ) |>
  summarise(across(encounter_count, sum), .by = citizenship) %>%
  mutate(citizenship = ifelse(encounter_count / sum(encounter_count) > .03, citizenship, "Other")) |>
  summarise(across(encounter_count, sum), .by = citizenship) |>
  mutate(
    share = encounter_count / sum(encounter_count) * 100,
    other = ifelse(citizenship == "Other", NA, citizenship)
  ) |>
  ggplot(aes(
    area = share,
    fill = other,
    label = ifelse(share > 0,
      paste0(
        str_to_upper(citizenship),
        "\n ",
        round(share, 0),
        "%"
      ),
      paste0(
        str_to_upper(citizenship),
        " ",
        round(share, 0),
        "%"
      )
    )
  )) +
  theme_usaid_blue(
    title = "Migrants Encountered in the Darien Region",
    subtitle = "Calendar Year 2024",
    base_size = 20,
    main_color_1 = main_color_2,
    caption = cap$dar
  ) +
  geom_treemap(
    size = 3,
    color = "white",
    start = "topleft"
  ) +
  geom_treemap_text(
    place = "center",
    grow = F,
    size = 18,
    start = "topleft",
    family = "Source Sans 3",
    color = "white",
    fontface = "bold"
  ) +
  guides(fill = "none") +
  scale_fill_cbp(na.value = "grey70")

ggs(
  plot = tree_dar_plot,
  category = "encounters",
  charttype = "tree",
  subset = "dar",
  demographics = NULL,
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r Darien_area_freq}
#| eval: false
dar |>
  mutate(
    citizenship = ifelse(!citizenship %in% c("HAITI", "VENEZUELA", "ECUADOR"), "OTHER", citizenship),
    .by = citizenship
  ) |>
  summarise(across(encounter_count, sum, na.rm = T),
    .by = c(citizenship, date)
  ) |>
  mutate(citizenship = case_when(
    citizenship == "Brasil (1)" ~ "Brasil",
    citizenship == "Chile (1)" ~ "Chile",
    T ~ citizenship
  )) |>
  mutate(
    citizenship = fct_reorder(citizenship, encounter_count, sum, .desc = T),
    citizenship = fct_relevel(citizenship, "VENEZUELA", after = 3)
  ) |>
  mutate(freq = encounter_count / sum(encounter_count), .by = date) %>%
  drop_na() |>
  ggplot(aes(
    x = date,
    y = freq,
    fill = citizenship
  )) +
  scale_x_date(breaks = tm_db(month2, n = 1), date_labels = "%b '%y") +
  scale_y_continuous(
    labels = label_percent(),
    breaks = c(.25, .5, .75)
    # sec.axis = dup_axis(name = "", trans = ~.)
  ) +
  # geom_area(alpha = 1)+

  stat_smooth(span = .15, se = F, position = "stack", geom = "area") +
  geom_smooth(span = .15, se = F, position = "stack", color = "black", linewidth = .5) +
  # geom_line(position = "stack",size = .5)+
  # geom_col()+
  labs(
    title = "Migrants Encountered in the Darien Gap",
    fill = "**Nationality:**",
    subtitle = "Share of Encounters",
    y = NULL,
    x = NULL
  ) +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(
      label = citizenship,
      color = citizenship
    ),
    family = "Gill Sans",
    fontface = "bold",
    size = 5,
    position = position_stacknudge(x = 30, vjust = .5)
  ) +
  theme_usaid_blue(
    caption = cap$dar,
    main_color_1 = main_color_2,
    base_size = 17, bl = F
  ) +
  theme(
    legend.position = "top",
    axis.title.y = element_markdown(),
    legend.title = element_textbox(),
    plot.title.position = "plot"
  ) +
  scale_fill_cbp() +
  scale_color_cbp() +
  guides(color = "none", fill = "none") +
  coord_cartesian(expand = F, xlim = c(date2 - 30 * 12 * 3, date2 + 300)) +
  geom_rangeframe(sides = "bl")

ggs(filename = "mu_charts/dar_area.jpg", width = 280)
```

```{r Darien_area_total}
darasum <- dar |>
  mutate(citizenship = ifelse(!citizenship %in% c("HAITI", "VENEZUELA", "ECUADOR"),
    "OTHER",
    citizenship
  )) |>
  summarise(across(encounter_count, sum, na.rm = T), .by = c(citizenship, date)) |>
  mutate(
    citizenship = fct_reorder(citizenship, encounter_count, sum, .desc = T),
    citizenship = fct_relevel(citizenship, "OTHER", "HAITI", "ECUADOR", "VENEZUELA", after = 3)
  ) |>
  mutate(
    freq = encounter_count / sum(encounter_count),
    esum = sum(encounter_count), .by = date
  ) %>%
  drop_na()
dar_bar_plot <- darasum %>%
  ggplot(aes(x = date, y = encounter_count, fill = citizenship)) +
  scale_x_date(breaks = tm_db(month2), date_labels = "%b '%y") +
  scale_y_continuous(
    breaks = c(2,4,6,8)*1e4,
   labels = label_maxunit()
    # sec.axis = dup_axis(name = "", trans = ~.)
  ) +
  geom_chicklet(
    data = . %>% mutate(across(citizenship, fct_rev)),
    color = "grey30"
  ) +
  labs(
   
    fill = "**Nationality:**",
    
    y = NULL,
    x = NULL
  ) +
  theme_usaid_blue(
    caption = cap$dar,
     title = "Migrants Encountered in the Darien Region",
    subtitle = paste("Thousands of Monthly Encounters |",
                     month(range(dar_tsum$date)[1], label = TRUE, abbr = TRUE),
                     year(range(dar_tsum$date)[1]),
                     "-",
                      month(range(dar_tsum$date)[2], label = TRUE, abbr = TRUE),
                      year(range(dar_tsum$date)[2])
    ),
    main_color_1 = main_color_2, bl = F,
    base_size = 18
  ) +
  theme(
    legend.position = "right",
    axis.title.y = element_markdown(),
    legend.title = element_markdown()
  ) +
  scale_fill_cbp(
    breaks = c("Other", "Haiti", "Ecuador", "Venezuela") %>% toupper()
  ) +
  coord_cartesian(
    expand = F, xlim = c(date2 - 30 * 12 * 3, date2 + 200),
    ylim = c(0, 9e4)
  ) +
  geom_rangeframe(sides = "bl", position = "stack") +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(
      label = citizenship,
      color = citizenship
    ),
    family = "Gill Sans",
    segment.linetype = "dotted",
    segment.curvature = -.2,
    direction = "y",
    fontface = "bold",
    size = 4,
    hjust = 0,
    force = .9,
    position = position_stacknudge(x = 40, vjust = .5)
  ) +
  geom_text(aes(label = round(esum / 1e3, 0), y = esum),
    family = "Gill Sans",
    vjust = -.3
  ) +
  geom_text(aes(label = round(encounter_count / 1e3, 0)),
    data = . %>% filter(date == date2, encounter_count > 2e3),
    family = "Gill Sans",
    fontface = "bold",
    color = "white",
    size = 3,
    hjust = .5,
    label.padding = unit(.4, "mm"),
    position = position_stacknudge(x = 0, vjust = .5)
  ) +
  scale_color_cbp() +
  guides(color = "none", fill = "none")


ggs(
  plot = dar_bar_plot,
  category = "encounters",
  charttype = "bars",
  subset = "dar",
  demographics = NULL,
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

## Mexico Graphs

```{r ret_enc_total}
ret <- edata$ret


mexre <- mex %>%
  summarise(across(encounter_count, sum), .by = date) %>%
  left_join(
    ret %>% summarise(across(returns, sum), .by = date)
  ) %>%
  pivot_longer(-date)
ret_mex_plot <- mexre %>%
  ggplot(aes(x = date, y = value, color = name)) +
  scale_color_metro() +
  geom_xspline(show.legend = F) +
  geom_point(
    data = . %>% filter(date == max(date)),
    show.legend = F
  ) +
  theme_usaid_blue(
    bl = F, caption = "Data from GOM | Chart compiled by USAID/LAC",
    base_size = 19,
    main_color_1 = "darkgreen"
  ) +
  scale_y_continuous(
    labels = ~ . / 1e3,
    sec.axis = dup_axis(
      name = "",
      breaks = mexre$value[mexre$date == max(mexre$date)],
      labels = label_number(accuracy = 2.1, scale = 1 / 1e3)
    )
  ) +
  geom_rangeframe(sides = "brl", data = . %>% drop_na()) +
  guides(color = "none") +
  labs(
    y = NULL,
    x = NULL,
    title = "Government of Mexico Migrant Encounters vs. Returns",
    subtitle = "Thousands of Encounters & Returns"
  ) +
  geom_segment(
    aes(
      x = date2,
      xend = date2 + 300,
      y = value[which(date == date2)],
      yend = value[which(date == date2)]
    ),
    inherit.aes = F,
    linetype = "dotted",
    color = "grey",
    data = . %>% filter(date == date2)
  ) +
  scale_x_date(breaks = tm_db(month = month2, n = 1, year0 = 2018), date_labels = "%b '%y") +
  pmap(
    list(
      c("Encounters", "Returns"),
      c("encounter_count", "returns"),
      c(2, 2.5)
    ),
    ~ geom_textpath(
      aes(label = ..1),
      text_only = T,
      hjust = .15,
      size = 5,
      fontface = "bold",
      text_smoothing = 50,
      vjust = ..3,
      data = . %>% filter(name == ..2)
    )
  ) +
  coord_cartesian(clip = "on", xlim = range(mexre$date), ylim = range(mexre$value) * 1.01)
ggs(
  plot = ret_mex_plot,
  category = "encounters",
  charttype = "ts",
  subset = "mex",
  demographics = NULL,
  additionalinfo = "ret",
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r mex_ncaplot}
mex_nca <- mex %>%
  summarise(across(encounter_count, sum), .by = c(date, citizenship)) %>%
  filter(citizenship %in% c(nca, "NICARAGUA"))
mex_nca_plot <- mex_nca %>%
  ggplot(aes(x = date, y = encounter_count, color = citizenship)) +
  geom_xspline() +
  geom_xspline(show.legend = F) +
  geom_point(
    data = . %>% filter(date == max(date)),
    show.legend = F
  ) +
  theme_usaid_blue(
    bl = F, caption = "Data from GOM | Chart compiled by USAID/LAC",
    base_size = 19,
    main_color_1 = "darkgreen"
  ) +
  scale_y_continuous(labels = ~ . / 1e3) +
  geom_rangeframe(sides = "lb", data = . %>% drop_na(), color = "black") +
  guides(color = "none") +
  labs(
    y = NULL,
    x = NULL,
    title = "Northern Central America Migrant Events in Mexico",
    subtitle = "Thousands of Encounters"
  ) +
  geom_segment(
    aes(
      x = date2,
      xend = date2 + 300,
      y = encounter_count[which(date == date2)],
      yend = encounter_count[which(date == date2)]
    ),
    inherit.aes = F,
    linetype = "dotted",
    color = "grey",
    data = . %>% filter(date == date2)
  ) +
  scale_x_date(breaks = tm_db(month = month2, n = 1, year0 = 2018), date_labels = "%b '%y") +
  coord_cartesian(clip = "on", xlim = c(min(mex$date) - 5, max(mex$date) + 150), ylim = range(mex_nca$encounter_count) * 1.02) +
  geom_text_repel(
    data = . %>% filter(date == max(mex_nca$date)),
    aes(label = str_to_title(citizenship)),
    nudge_x = 140,
    direction = "y",
    force = 3,
    size = 4,
    fontface = "bold",
    family = "Gill Sans",
    segment.linetype = "dotted"
  )


ggs(
  plot = mex_nca_plot,
  category = "encounters",
  charttype = "spag",
  subset = "mex",
  demographics = "nca",
  folder = "mu_charts",
  extension = ".png",
  width = 250,
  height = 150,
)
```

```{r mex tree}
mex_tree_year <- mex |>
  mutate(
    fiscal_year = fiscal_year(date),
    year = year(date)
  ) %>%
  filter(
    fiscal_year == 2024,
    # date == date2
  ) %>%
  mutate(se = sum(encounter_count)) %>%
  mutate(
    .by = citizenship,
    citizenship = ifelse(sum(encounter_count) / se > .02, citizenship, "Other")
  ) %>%
  summarise(across(encounter_count, sum), .by = c(citizenship)) %>%
  mutate(
    share = encounter_count / sum(encounter_count) * 100,
    other = ifelse(citizenship == "Other", NA, citizenship),
    subregion = case_when(
      citizenship %in% c(nca, "NICARAGUA") ~ "nca",
      citizenship %in% c("VENEZUELA", "COLOMBIA", "PERU", "ECUADOR", "BRAZIL") ~ "sa",
      T ~ "Other"
    )
  ) |>
  arrange(-share) %>%
  mutate(cs = cumsum(share)) %>%
  ggplot(aes(
    area = share,
    fill = other,
    subgroup = subregion,
    label = ifelse(share > 1,
      paste0(
        str_to_title(citizenship),
        "\n ",
        round(share, 0),
        "%"
      ),
      paste0(
        str_to_title(citizenship),
        " ",
        round(share, 0),
        "%"
      )
    )
  )) +
  geom_treemap(size = 3, color = "white", start = "topleft") +
  geom_treemap_subgroup_border(start = "topleft", color = "white", size = 4) +
  geom_treemap_text(
    place = "center", grow = F, aes(color = citizenship),
    size = 18, start = "topleft",
    family = "Gill Sans",
    fontface = "bold"
  ) +
  scale_color_manual(values = c(
    "SENEGAL" = "grey50",
    "HAITI" = "grey50",
    "DOMINICAN REPUBLIC" = "grey50"
  ), na.value = "white") +
  guides(fill = "none") +
  labs(title = paste(
    "Migrants Encountered in Mexico |",
    "Fiscal Year 2024"
  )) +
  scale_fill_cbp(na.value = "grey80") +
  theme_usaid_blue(
    base_family = "Gill Sans", base_size = 20,
    caption = "Data from GOM | chart created by USAID/LAC",
    main_color_1 = "darkgreen"
  )

ggs(
  plot = mex_tree_year,
  category = "encounters",
  charttype = "tree",
  subset = "mex",
  demographics = NULL,
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

#Colombia graphs

```{r colombia plot}
colu <- compile_colombia()

colugg <- colu$regular %>%
  filter(
    entrada_salida == "Entradas",
    motivo_viaje == "Tránsito",
    nationality == "Venezuela"
  ) %>%
  summarise(across(count, sum), .by = date) %>%
  filter(date >= min(colu$encounter$date)) %>%
  mutate(component = "Regular") %>%
  bind_rows(
    colu$encounter %>%
      filter(nationality == "Venezuela") %>%
      summarise(across(count, sum), .by = date) %>%
      mutate(component = "Irregular")
  ) %>%
  arrange(date) %>%
  mutate(label = case_when(
    component == "Regular" ~ "Regular\nArrivals",
    component == "Irregular" ~ "Irregular\nEncounters"
  ))


colu_plot <- colugg %>%
  ggplot(aes(x = date, y = count, color = component)) +
  geom_vline(xintercept = as_date("2024-07-28"), linetype = "dotted", color = "grey30") +
  geom_xspline() +
  geom_point(
    data = . %>% filter(date == "2024-07-28"),
    size = 2, shape = 21, fill = "white"
  ) +
  theme_usaid_blue(
    bl = F, base_size = 19,
     title = "Venezuelan Arrivals in Colombia",
    subtitle = "Monthly Arrivals by Method of Arrival",
    caption = "Data from Migracion Colombia, chart compiled by USAID/LAC"
  ) +
  geom_point(data = . %>% filter(date == max(date), .by = component)) +
  scale_x_date(
    breaks = tm_db(month2, n = 3),
    date_labels = "%b '%y",
    minor_breaks = seq(min(colugg$date), max(colugg$date), by = "1 month")
  ) +
  guides(
    x = guide_axis(minor.ticks = T),
    color = "none"
  ) +
  labs(
    y = NULL,
    x = NULL,
   
  ) +
  geom_text_repel(
    aes(
      label = label,
      color = component
    ),
    data = . %>% filter(date == max(date), .by = component),
    fontface = "bold",
    family = "Gill Sans",
    hjust = 0,
    segment.linetype = "dotted",
    size = 4,
    nudge_x = 50,
  ) +
  scale_color_si(discrete = T, palette = "siei") +
  scale_y_continuous(
    breaks = c(0, 2e4, 4e4, 6e4),
    labels = c("0", "20", "40", "60K")
  ) +
  geom_text(
    aes(
      x = as_date("2024-07-28"), y = 4e4,
      label = "Venezuelan\nElection"
    ),
    nudge_x = -5,
    hjust = 1, vjust = 0, color = "grey20",
    size = 5, fontface = "italic"
  )


ggs(
  plot = colu_plot,
  category = "encounters",
  charttype = "ts",
  subset = "col",
  demographics = NULL,
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

#Annex (Old Graphs Eval = FALSE)

```{r LT TS ENC}
#| eval: false
lt_cbp <- pull_swb_total() %>%
  mutate(fiscal_year = fiscal_year(date)) %>%
  summarise(across(encounter_count, sum), .by = fiscal_year) %>%
  filter(fiscal_year < 2020)
swb60 <- pdf_text("Encounter Data/swb60-20.PDF") %>%
  str_split(pattern = "\n") %>%
  map(~ str_split(., " ")) %>%
  .[[1]] %>%
  map(~ .[!. %in% ""]) %>%
  map(~ .[c(1, 11)]) %>%
  .[c(9:69)]

swb60t <- tibble(
  fiscal_year = map_chr(swb60, ~ pluck(., 1)),
  enc = map_chr(swb60, ~ pluck(., 2))
) %>%
  mutate(across(enc, ~ str_remove_all(., "[:punct:]"))) %>%
  mutate(across(everything(), as.numeric)) %>%
  rename(swb_apps = enc)

apps <- read.csv("Encounter Data/apps_hist.csv") %>%
  t() %>%
  as_tibble(rownames = "x1") %>%
  mutate(
    x1 = str_remove(x1, "X"),
    x1 = str_remove_all(x1, "\\.")
  ) %>%
  pull(x1)

cbp_hist <- tibble(
  fiscal_year = apps[1:length(apps) %% 2 == 1],
  apps = apps[1:length(apps) %% 2 == 0]
) %>%
  mutate(across(c(fiscal_year, apps), as.numeric)) %>%
  arrange(fiscal_year) %>%
  filter(fiscal_year < 2014) %>%
  left_join(swb60t) %>%
  mutate(across(apps, ~ ifelse(!is.na(swb_apps), swb_apps, .))) %>%
  select(-swb_apps) %>%
  bind_rows(
    cbp_all %>%
      filter(land_border_region == "Southwest Land Border") %>%
      # filter(component != "Office of Field Operations") %>%
      summarise(across(encounter_count, sum), .by = fiscal_year) %>%
      filter(fiscal_year >= 2020) %>%
      bind_rows(lt_cbp) %>%
      rename(apps = encounter_count)
  ) %>%
  filter(fiscal_year <= 2024) %>%
  # make average monthly
  mutate(appsm = ifelse(fiscal_year == 2024, apps / (month(date2) + 3), apps / 12)) %>%
  arrange(fiscal_year)


lt_ts_plot <- ggplot(cbp_hist, aes(x = fiscal_year, y = apps)) +
  # geom_line()+
  theme_usaid_blue(
    bl = F, base_size = 20,
    caption = paste(cap$swb_alt, "<br>Nationwide encounters were recorded annually before 1960.")
  ) +
  scale_y_continuous(
    labels = seq(.5, 1.5, .5) %>% c("", ., "2\nMillion"),
    breaks = seq(0, 2e6, 5e5),
    # sec.axis = dup_axis(name = "")
  ) +
  scale_x_continuous(
    breaks = seq(1925, 2000, 25) %>% c(2024),
    labels = seq(1925, 2000, 25) %>% c("2024"),
    expand = expansion(mult = c(0.01, 0.1))
  ) +
  geom_point(data = . %>% filter(fiscal_year %in% c(2022, 2023, 2024))) +
  pmap(
    list(
      # c(1954,2000,1986),
      c(2022, 2023, 2024),
      c(0, 1, 1),
      c(0)
    ),
    ~ geom_text_repel(
      data = . %>% filter(fiscal_year %in% ..1),
      aes(label = round(apps / 1e6, 1) %>% paste0("M")),
      nudge_y = 1e4,
      nudge_x = ..2,
      fontface = "bold",
      box.padding = 0.9, # Increase padding around the labels
      point.padding = 0.5, # Padding around the point to prevent overlap
      force = 3, # Increase the force of repulsion to spread out labels
      max.overlaps = 10,
      segment.linetype = "dotted",
      min.segment.length = ..3
    )
  ) +
  geom_rangeframe(sides = "bl") +
  labs(
    title = "Migrants Encountered at the U.S. Southwest Border",
    #<sup>1</sup>",
    subtitle = "FY 1925 - FY 2024",
    y = NULL,
    x = NULL
  ) +
  coord_cartesian(
    xlim = c(1925, 2025), ylim = c(0, 2.65e6),
    clip = "off"
  ) +
  theme(
    panel.border = element_rect(size = 10, fill = NA, color = "transparent"),
    plot.title.position = "plot",
    plot.caption = element_textbox(size = 10)
  ) +
  geom_xspline(
    # width = .5
  )

ggs(
  plot = lt_ts_plot,
  category = "ltencounters",
  subset = "swb",
  demographics = NULL,
  charttype = "ts",
  additionalinfo = "fy24aug_enc",
  extension = ".jpg",
  folder = "mu_charts",
  width = 280,
  height = 170
)
```

```{r parole_area}
#| eval: false
parole_plot <- swb |>
  mutate(date = date) |>
  filter(
    citizenship %in% c(
      "NICARAGUA",
      "CUBA",
      "HAITI",
      "VENEZUELA"
    ),
    date >= as.Date("2021-01-01"),
    component == "U.S. Border Patrol"
  ) |>
  arrange(date) |>
  group_by(date, citizenship) |>
  summarise(across(encounter_count, sum), .groups = "drop_last") |>
  pivot_longer(-c(date, citizenship)) |>
  ungroup() |>
  mutate(across(citizenship, str_to_title),
    citizenship = fct_relevel(
      citizenship,
      "Venezuela",
      "Haiti",
      "Nicaragua",
      "Cuba",
    ),
  ) |>
  ggplot(aes(x = date, y = value, alluvium = citizenship)) +
  geom_area(aes(x = date, y = value, fill = citizenship),
    alpha = .8,
    color = "black"
  ) +
  labs(
    y = "Monthly Apprehensions <br> *(Thousands)*",
    x = NULL,
    title = "Migrants Encountered at the U.S. Southwest Border | *Between Points of Entry*",
    subtitle = "Parole Program-Eligible Nationalities",
    # title = "Parole Progam To Credit For Steep Drop In Irregular Migration to the U.S. Southwest Border",
    fill = "**Nationality:**"
  ) +
  coord_cartesian(expand = F, clip = "off", xlim = as.Date(c("2021-01-01", date2 + 300))) +
  theme_usaid_blue(
    base_family = "Gill Sans",
    base_size = 16,
    caption = paste(cap$swb_alt)
  ) +
  scale_y_continuous(
    labels = ~ . / 1e3,
    sec.axis = dup_axis(name = "")
  ) +
  scale_x_date(
    breaks = tm_db(month = month2),
    date_labels = "%b '%y"
  ) +
  geom_rangeframe(color = "white", sides = "bl") +
  theme(
    legend.position = "top",
    text = element_text(family = "Gill Sans"),
    plot.subtitle = element_textbox_simple(margin = margin(5, 5, 10, 5), family = "Gill Sans"),
    plot.caption = element_textbox(margin = margin(5, 5, 5, 5))
  ) +
  # scale_fill_manual(values = c("darkolivegreen", "darkolivegreen1", "darkolivegreen4", "chocolate1"))+
  scale_fill_manual(values = c("darkred", "darkblue", "darkorange", "darkgreen")) +
  geom_curve(
    aes(
      x = as.Date("2022-03-01"),
      y = 7.5e4,
      yend = 2.3e4,
      xend = as.Date("2023-01-01")
    ),
    curvature = -.3,
    color = "grey30",
    size = .5,
    arrow = arrow(length = unit(.3, "cm"))
  ) +
  geom_curve(
    aes(
      x = as.Date("2022-03-01"),
      y = 7.5e4,
      yend = 6.3e4,
      xend = as.Date("2022-10-01")
    ),
    curvature = -.3,
    color = "grey30",
    size = .5,
    arrow = arrow(length = unit(.3, "cm"))
  ) +
  guides(color = "none") +
  geom_vline(xintercept = as.Date("2022-10-01"), color = "chocolate4", linetype = "dashed", linewidth = 1, alpha = .8) +
  geom_vline(
    xintercept = as.Date("2023-01-01"), color = "grey", linetype = "dashed",
    linewidth = 1, alpha = .8
  ) +
  # map2(c("1345", "1761", "49"),
  #      c("#F4511E", "#FFB300","#315987"),
  #      ~geom_vline(xintercept = as.Date("2023-01-06"),
  #                  color = .y,
  #                  linetype = .x))+
  annotate(
    x = as.Date("2021-12-01"), y = 7.5e4, geom = "richtext",
    family = "Gill Sans",
    size = 4,
    color = "grey20",
    label = "Parole Program Implemented on October 18th <br>
           for<span style = 'color:darkred'> <strong>Venezuela</strong></span> and January 6th for <br> <span style = 'color:darkorange'><strong>Nicaragua</strong></span>,
           <span style = 'color:darkblue'><strong>Haiti</strong></span>, and <span style = 'color:darkgreen'><strong>Cuba</strong></span>"
  ) +
  geom_rangeframe(sides = "bl", position = "stack") +
  theme(
    axis.text.y.right = element_blank(),
    plot.title.position = "plot",
    legend.title = element_markdown(),
    axis.ticks.y.right = element_blank(),
    plot.margin = margin(5, 15, 5, 5),
    panel.grid.major.y = element_blank()
  ) +
  annotate(
    x = date2 + 200,
    y = 50,
    geom = "text",
    label = ""
  )
ggs(
  plot = parole_plot,
  category = "encounters",
  subset = "swb",
  demographics = "chnv_parole",
  charttype = "area",
  width = 310,
  dpi = 200,
  height = 150
)


```

```{r SWB_Area_Pct}
#| eval: false
cbpa <- swb |>
  select(
    citizenship,
    date,
    encounter_count
  ) |>
  mutate(citizenship = str_to_title(citizenship)) %>%
  mutate(citizenship = case_when(
    citizenship %in% c("Honduras", "El Salvador", "Guatemala", "Cuba", "Nicaragua", "Venezuela", "Haiti") ~ citizenship,
    citizenship %in% c(
      "Mexico"
    ) ~ citizenship,
    T ~ "Other"
  )) %>%
  mutate(citizenship = str_to_upper(citizenship)) %>%
  mutate(totenc = sum(encounter_count)) |>
  mutate(
    other = ifelse(citizenship == "OTHER", NA, citizenship),
    subregion = case_when(
      citizenship %in% c("MEXICO") ~ "Mexico",
      citizenship %in% c(nca, "NICARAGUA") ~ "nca",
      citizenship %in% c(
        "VENEZUELA",
        "COLOMBIA",
        "PERU",
        "ECUADOR",
        "BRAZIL"
      ) ~ "sa",
      citizenship %in% c("HAITI", "CUBA") ~ "car",
      T ~ "Other"
    ) %>% as.factor(),
    subregion = fct_relevel(subregion, "Mexico", "nca", "sa", "car", "Other")
  ) %>%
  summarise(across(encounter_count, sum), .by = c(citizenship, date)) |>
  mutate(freq = encounter_count / sum(encounter_count), .by = date) %>%
  mutate(citizenship = fct_reorder(citizenship, freq, sum, .desc = F)) %>%
  mutate(csum = sum(freq, na.rm = T), .by = c(date))

area_swb_pct_plot <- cbpa %>%
  ggplot(aes(
    x = date,
    y = freq,
    fill = citizenship
  )) +
  labs(
    title = "Migrants Encountered at the U.S. Southwest Border",
    subtitle = "**Share of Encounters**",
    y = NULL,
    x = NULL,
    fill = "**Nationality:**"
  ) +
  geom_area(alpha = .8, ) +
  geom_line(
    position = "stack",
    alpha = 1,
    color = "white"
  ) +
  theme_usaid_blue(
    caption = cap$swb_alt, rf = F,
    main_color_1 = main_color_1,
    base_size = 15,
    bl = F
  ) +
  scale_x_date(
    breaks = (tm_db(month2,
      year0 = 2019,
      n = 1
    ) %>% sort())[1:14],
    date_labels = "%b '%y"
  ) +
  scale_y_continuous(label = label_percent(), breaks = c(.25, .5, .75, 1)) +
  scale_fill_cbp() +
  scale_color_cbp() +
  guides(color = "none", fill = "none") +
  geom_rangeframe(position = "stack", sides = "b") +
  geom_text_repel(
    data = . %>% filter(date == date2),
    aes(
      label = citizenship,
      color = citizenship
    ),
    family = "Gill Sans",
    force = 10,
    force_pull = 0,
    position = position_stacknudge(
      x = 100, vjust = .5,
      direction = "split.y"
    ),
    fontface = "bold",
    segment.linetype = "dotted",
    size = 3.8
  ) +
  theme(
    legend.position = "top",
    legend.title = element_markdown(),
    axis.ticks.y.right = element_blank(),
    axis.text.y.right = element_blank()
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01"), date2 + 300),
    ylim = c(0, 1.2)
  )

ggs(
  plot = area_swb_pct_plot,
  category = "encounters",
  charttype = "pctarea",
  subset = "swb",
  demographics = "top",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r SWB_nca_combined}
#| eval: false
swb2 <- swb |>
  filter(citizenship %in% c("EL SALVADOR", "HONDURAS", "GUATEMALA")) |>
  arrange(date) |>
  summarise(across(encounter_count, sum), .by = c(date, demographic)) |>
  # mutate(encounter_count = encounter_count / sum(encounter_count)*100) |>
  pivot_wider(names_from = demographic, values_from = encounter_count) |>
  mutate(across(c(`UC / Single Minors`, `Accompanied Minors`, `FMUA`), ~ ifelse(is.na(.), 0, .)), ) |>
  pivot_longer(-c(date)) |>
  ungroup() %>%
  mutate(
    label = case_when(
      name == "UC / Single Minors" ~ "Unaccompanied\nMinors",
      name == "FMUA" ~ "Family Units",
      T ~ name
    ),
    label = fct_relevel(label, "Accompanied Minors", "Unaccompanied\nMinors", "Family Units", "Single Adults")
  ) |>
  group_by(date) |>
  mutate(summig = sum(value))

nca_bar_plot <- swb2 |>
  ggplot(aes(x = date, y = value, fill = label)) +
  # geom_col()+
  geom_chicklet(data = . %>% mutate(across(label, fct_rev))) +
  labs(
    subtitle = "Monthly Encounters <br> *(Thousands)*",
    x = NULL,
    y = NULL,
    title = paste("Northern Central American", "Migrant Encounters <br> at the U.S. Southwest Border"),
    fill = NULL
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01") - 30, as.Date(date2) + 220)
  ) +
  theme_usaid_blue(
    base_family = "Gill Sans", caption = cap$swb_alt, rf = F, bl = F,
    base_size = 17
  ) +
  scale_y_continuous(
    labels = ~ round(. / 1e3, 0),
    breaks = c(
      min(swb2$summig),
      swb2$summig[which(swb2$date == date2)],
      max(swb2$summig)
    ),
    # sec.axis = dup_axis(name = "")
  ) +
  scale_x_date(breaks = tm_db(month2, n = 1), date_labels = "%b '%y") +
  geom_rangeframe(color = "grey50", sides = "bl", position = "stack") +
  guides(fill = guide_legend(direction = "horizontal")) +
  theme(
    legend.position = "top",
    axis.title.y = element_markdown(family = "Gill Sans"),
    text = element_text(family = "Gill Sans"),
    plot.subtitle = element_textbox_simple(margin = margin(5, 5, 10, 5), family = "Gill Sans"),
    plot.caption = element_textbox(margin = margin(5, 5, 5, 5))
  ) +
  geom_rangeframe(color = "grey50", sides = "bl", position = "stack") +
  geom_text_repel(
    position = position_stacknudge(
      x = 200,
      vjust = .5,
      direction = "split.y"
    ),
    data = . %>% filter(
      date == date2,
      label != "Accompanied Minors"
    ),
    xlim = c(
      as.Date("2019-10-01") - 30,
      as.Date(date2) + 300
    ),
    hjust = .5,
    segment.linetype = "dotted",
    size = 4,
    fontface = "bold",
    family = "Gill Sans",
    aes(label = label, color = label)
  ) +
  guides(fill = "none", color = "none") +
  theme(
    legend.position = "top",
    axis.title.y = element_markdown(family = "Gill Sans"),
    axis.text.y.right = element_blank(),
    text = element_text(family = "Gill Sans"),
    plot.title.position = "plot",
    plot.margin = unit(c(1, 3, 1, 1), units = "cm"),
    plot.subtitle = element_textbox_simple(margin = margin(5, 5, 10, 5), family = "Gill Sans"),
    plot.caption = element_textbox(margin = margin(5, 5, 5, 5))
  ) +
  scale_fill_metro(
    breaks = c("Single Adults", "Family Units", "Unaccompanied Minors"),
    aesthetics = c("fill", "color")
  )
ggs(
  plot = nca_bar_plot,
  category = "encounters",
  charttype = "sbar",
  subset = "swb",
  demographics = "nca",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r SWB_OTHER_combined}
#| eval: false 
swb2 <- swb |>
  filter(!citizenship %in% c("MEXICO", "EL SALVADOR", "HONDURAS", "GUATEMALA")) |>
  arrange(date) |>
  summarise(across(encounter_count, sum), .by = c(date, demographic)) |>
  # mutate(encounter_count = encounter_count / sum(encounter_count)*100) |>
  pivot_wider(names_from = demographic, values_from = encounter_count) |>
  mutate(across(c(`UC / Single Minors`, `Accompanied Minors`, `FMUA`), ~ ifelse(is.na(.), 0, .)), ) |>
  pivot_longer(-c(date)) |>
  ungroup() %>%
  mutate(
    label = case_when(
      name == "UC / Single Minors" ~ "Unaccompanied\nMinors",
      name == "FMUA" ~ "Family Units",
      T ~ name
    ),
    label = fct_relevel(label, "Accompanied Minors", "Unaccompanied\nMinors", "Family Units", "Single Adults")
  ) |>
  group_by(date) |>
  mutate(summig = sum(value))

other_bar_plot <- swb2 |>
  ggplot(aes(x = date, y = value, fill = label)) +
  geom_chicklet(data = . %>% mutate(across(label, fct_rev))) +
  labs(
    subtitle = "Monthly Encounters <br> *(Thousands)*",
    x = NULL,
    y = NULL,
    title = paste("All Other", "Migrant Encounters at the U.S. Southwest Border"),
    fill = NULL
  ) +
  coord_cartesian(
    expand = F, clip = "off",
    xlim = c(as.Date("2019-10-01") - 30, as.Date(date2) + 220)
  ) +
  theme_usaid_blue(
    base_family = "Gill Sans", caption = cap$swb_alt, rf = F, bl = F,
    base_size = 18
  ) +
  scale_y_continuous(
    labels = ~ round(. / 1e3, 0),
    breaks = c(
      min(swb2$summig),
      swb2$summig[which(swb2$date == date2)],
      max(swb2$summig)
    ),
    # sec.axis = dup_axis(name = "")
  ) +
  scale_x_date(breaks = tm_db(month2, n = 1), date_labels = "%b '%y") +
  geom_rangeframe(color = "grey50", sides = "bl", position = "stack") +
  guides(fill = guide_legend(direction = "horizontal")) +
  theme(
    legend.position = "top",
    axis.title.y = element_markdown(family = "Gill Sans"),
    text = element_text(family = "Gill Sans"),
    plot.subtitle = element_textbox_simple(margin = margin(5, 5, 10, 5), family = "Gill Sans"),
    plot.caption = element_textbox(margin = margin(5, 5, 5, 5))
  ) +
  geom_rangeframe(color = "grey50", sides = "bl", position = "stack") +
  geom_text_repel(
    position = position_stacknudge(
      x = 220,
      vjust = .5,
      direction = "split.y"
    ),
    data = . %>% filter(
      date == date2,
      !label %in% c("Accompanied Minors")
    ),
    xlim = c(
      as.Date("2019-10-01") - 30,
      as.Date(date2) + 400
    ),
    hjust = .5,
    segment.linetype = "dotted",
    size = 4,
    fontface = "bold",
    family = "Gill Sans",
    aes(label = label, color = label)
  ) +
  guides(fill = "none", color = "none") +
  theme(
    legend.position = "top",
    axis.title.y = element_markdown(family = "Gill Sans"),
    axis.text.y.right = element_blank(),
    text = element_text(family = "Gill Sans"),
    plot.title.position = "plot",
    plot.margin = unit(c(1, 3, 1, 1), units = "cm"),
    plot.subtitle = element_textbox_simple(margin = margin(5, 5, 10, 5), family = "Gill Sans"),
    plot.caption = element_textbox(margin = margin(5, 5, 5, 5))
  ) +
  scale_fill_metro(
    breaks = c("Single Adults", "Family Units", "Unaccompanied Minors"),
    aesthetics = c("fill", "color")
  )
ggs(
  plot = other_bar_plot,
  category = "encounters",
  charttype = "sbar",
  subset = "swb",
  demographics = "Other",
  additionalinfo = NULL,
  folder = "mu_charts",
  width = 250,
  height = 150,
)
```

```{r SWB_TS_alltime}
#| eval: false
apps <- read.csv("Encounter Data/apps_hist.csv") %>%
  t() %>%
  as_tibble(rownames = "x1") %>%
  mutate(
    x1 = str_remove(x1, "X"),
    x1 = str_remove_all(x1, "\\.")
  ) %>%
  pull(x1)

cbp_hist <- tibble(
  fiscal_year = apps[1:length(apps) %% 2 == 1],
  apps = apps[1:length(apps) %% 2 == 0]
) %>%
  mutate(across(c(fiscal_year, apps), as.numeric)) %>%
  arrange(fiscal_year) %>%
  filter(fiscal_year < 2020) %>%
  bind_rows(
    cbp_all %>%
      filter(land_border_region == "Southwest Land Border") %>%
      summarise(across(encounter_count, sum), .by = fiscal_year) %>%
      rename(apps = encounter_count)
  ) %>%
  arrange(fiscal_year) %>%
  mutate(apps = ifelse(fiscal_year == 2024, apps / 9, apps / 12))
ggplot(cbp_hist, aes(x = fiscal_year, y = apps)) +
  # geom_line()+
  theme_usaid_blue(
    bl = F, base_size = 15,
    caption = paste(cap$swb_alt, "<br>", "<sup>1</sup>Historical records prior to 2007 scoped to U.S. Border Patrol (USBP) apprehensions")
  ) +
  scale_y_continuous(
    labels = ~ . / 1e3,
    breaks = seq(0, 2.5e5, 5e4),
    # sec.axis = dup_axis(name = "")
  ) +
  scale_x_continuous(breaks = seq(1925, 2000, 25) %>% c(2024)) +
  geom_point(data = . %>% filter(fiscal_year %in% c(
    2022, 2023, 2024
    # 1954,2000,1986
  ))) +
  pmap(
    list(
      list(
        # c(1954,2000,1986),
        c(2022, 2023, 2024)
      ),
      c(
        # 0,
        -4
      ),
      c(
        # .5,
        0
      )
    ),
    ~ geom_text_repel(
      data = . %>% filter(fiscal_year %in% ..1),
      aes(label = round(apps / 1e3, 1) %>% paste0("M")),
      segment.linetype = "dotted",
      nudge_y = 1e5,
      nudge_x = ..2,
      min.segment.length = ..3
    )
  ) +
  geom_rangeframe(sides = "bl") +
  labs(
    title = "Migrants Encountered at the U.S. Southwest Border",
    #<sup>1</sup>",
    subtitle = "*Thousands of Encounters (Monthly Average) | 1925 - 2024*",
    y = NULL,
    x = NULL
  ) +
  theme(
    panel.background = element_rect(fill = background, color = "transparent"),
    plot.background = element_rect(fill = background, color = "transparent")
  ) +
  geom_xspline(
    # width = .5
  )
ggs(filename = "mu_charts/monthly_avg_us.png", height = 125)
```
