---
title: "Miscellaneous Fall"
author: "Paul Beach"
format: html
editor: visual
---

```{r net_migration_scatter}
shelf(WDI,tidyverse)

# Define the indicators
indicators <- c(
  net_migration = 'SM.POP.NETM',
  remittances_gdp = 'BX.TRF.PWKR.DT.GD.ZS',
  population = 'SP.POP.TOTL'  # Total Population
)

# Retrieve data from the World Bank
# Adjust the years as needed; here we use the most recent available data
data_raw <- WDI(
  country = "all",
  indicator = indicators,
  start = 2017,
  end = 2021,
  extra = TRUE,
  cache = NULL
)

# Clean and prepare the data
data_clean <- data_raw %>%
  # Remove aggregate regions and keep only countries
  filter(!region %in% c("Aggregates", "", NA)) %>%
  # Select relevant columns
  select(
    country,
    iso2c,
    iso3c,
    year,
    net_migration,
    remittances_gdp,
    population,
    income,
    region
  ) %>%
  # Group by country and keep the most recent data
  group_by(country) %>%
  arrange(desc(year)) %>%
  slice(1) %>%
  ungroup() %>%
  # Remove rows with missing values for plotting
  filter(!is.na(net_migration), !is.na(remittances_gdp)) %>% 
  mutate(net_migration_cubert = sign(net_migration) * abs(net_migration)^(1/3))

# The population data is now included in data_clean but not yet integrated into the plot
# You can inspect it as needed
# View(head(data_clean))  # Uncomment to view the first few rows
plot_migration_remittances_highlight <- function(data, country_name) {
  # Ensure the country_name exists in the data
  if (!country_name %in% data$country) {
    stop(paste("Country", country_name, "not found in the data."))
  }
  
  # Create a variable to identify the country to highlight
  data$highlight <- ifelse(data$country == country_name, country_name, "Others")
  
  # Compute the median of remittances_gdp for the horizontal line
  median_remittances <- median(data$remittances_gdp, na.rm = TRUE)
  
  # Create the plot
  p <- ggplot(data, aes(x = net_migration_cubert, y = remittances_gdp)) +
    # General points
    geom_point(size = 2, alpha = 0.6) +
    # Highlight the specified country
    geom_point(
      data = subset(data, country == country_name),
      aes(x = net_migration_cubert, y = remittances_gdp),
      color = "black",
      shape = 21, fill = main_color_2,
      size = 3
    ) +
    # Add a label for the highlighted country
    geom_text(
      data = subset(data, country == country_name),
      aes(label = country),
      hjust = -0.3,
      family = "Gill Sans",
      vjust = 0.5,
      size = 4,
      color = main_color_2,
    ) +
    # Add median lines
    geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +
    geom_hline(
      yintercept = median_remittances,
      linetype = "dashed",
      color = "gray50"
    ) +
    # Labels and theme
    labs(
      title = paste("Transformed Net Migration Rate vs. Remittances (% of GDP) -"),
      x = "Net Migration (Cubed Root)",
      y = "Remittances Received<br>(% of GDP)",
      color = "Region"
    ) +
    theme_usaid_blue(bl = F) +
    scale_y_sqrt(labels =label_percent(scale = 1))
  
  # Return the plot
  return(p)
}
plot_migration_remittances_highlight(data_clean, "Peru")

```

```{r pop pyramid 1}
data("popB5")

popB5 %>% view()
age_levels <- c(
  "0-4", "5-9", "10-14", "15-19", "20-24",
  "25-29", "30-34", "35-39", "40-44", "45-49",
  "50-54", "55-59", "60-64", "65-69", "70-74",
  "75-79", "80-84", "85-89", "90-94", "95-99",
  "100+"
)
peru <- popB5 %>% 
 distinct(name,age,`2020`) %>% 
  filter(name %in% c("Latin America and the Caribbean","Guatemala")) %>% 
  #make a pct in each bracket
  mutate(pct_age = `2020` / sum(`2020`), .by = name) %>% 
  mutate(age = factor(age, levels = age_levels))

peru_diff <- peru %>%  
  select(name, age, pct_age) %>% 
  pivot_wider(names_from = name, values_from = pct_age, id_cols = age) %>% 
  mutate(diff = Guatemala - `Latin America and the Caribbean`)

peru_diff %>% 
  ggplot(aes(x = diff, y = age)) +
  geom_col(aes(fill = diff > 0), width = 0.8) +  # Adjusted width for better appearance
  geom_vline(xintercept = 0, color = "black", linetype = "dashed") +  # Vertical line at zero
  scale_fill_manual(values = c("TRUE" = main_color_1, "FALSE" = main_color_2), guide = FALSE) +  # Color coding
  scale_x_continuous(labels = percent_format(accuracy = 0.1)) +  # Format x-axis labels as percentages
  labs(
    title = "Difference in Age Distribution: Guatemala vs. Latin America and the Caribbean (2020)",
    x = "Percentage Point Difference",
    y = "Age Group"
  ) +
  theme_usaid_blue(bl = F)

```

```{r pop pyramid 2}



pop
data_pyramids <- popB5 %>% 
  distinct(name, age, `2020`) %>% 
  filter(name %in% c("Latin America and the Caribbean", "Guatemala")) %>% 
  group_by(name) %>% 
  mutate(pct_age = `2020` / sum(`2020`)) %>% 
  ungroup() %>% 
  mutate(age = factor(age, levels = age_levels))

# Pivot data to wide format and calculate differences
data_wide <- data_pyramids %>%  
  select(name, age, pct_age) %>% 
  pivot_wider(names_from = name, values_from = pct_age) %>% 
  mutate(
    diff = Guatemala - `Latin America and the Caribbean`,
    diff_percent = diff * 100  # Convert to percentage points
  )

# Plotting

max_abs_diff <- max(abs(data_wide$diff_percent), na.rm = TRUE)

# Create the plot
# Define a threshold for significant differences
threshold <- 1  # percentage points

data_wide <- data_wide %>%
  mutate(
    significant = ifelse(abs(diff_percent) >= threshold, TRUE, FALSE),
    diff_significant = ifelse(significant, diff_percent, NA)
  )

# Plot with significant differences highlighted
ggplot(data_wide, aes(x = age, y = Guatemala)) +
  geom_bar(stat = "identity", aes(fill = diff_significant), width = 0.8) +
  scale_fill_gradient2(
    low = "steelblue",
    mid = "white",
    high = "tomato",
    midpoint = 0,
    na.value = "gray80",  # Color for non-significant differences
    name = "Difference\nRelative to Region (%)",
    limits = c(-max_abs_diff, max_abs_diff),
    labels = percent_format(scale = 1)
  ) +
  coord_flip() +
  labs(
    title = "Guatemala's Population Pyramid Highlighting Significant Differences (2020)",
    x = "Age Group",
    y = "Percentage of Total Population",
    fill = "Difference\nRelative to Region"
  ) +
  theme_usaid_blue(bl = F) +
  theme(
    legend.position = "right"
  )+
  scale_y_continuous(labels = scales::percent_format(scale = 100))



```

```{r}
data("popF5")
data(popM5)
popM5$sex <- "Male"
popF5$sex <- "Female"

pop_pyr <- popM5 %>% filter(name %in% c("Mexico",
                             "Guatemala",
                             "Honduras", 
                             "El Salvador",
                             "Nicaragua",
                             "United States")
                 ) %>% 
  pivot_longer(-c(country_code,name,age,sex),names_to = "year") %>% 
  mutate(pct_value = value/sum(value), .by = c(name,year)) %>% 
bind_rows(
  popF5 %>% 
    filter(name %in% c("Mexico",
                       "Guatemala",
                       "Honduras",
                       "El Salvador",
                       "Nicaragua",
                       "United States")
           ) %>% 
  pivot_longer(-c(country_code,name,age,sex),names_to = "year") %>% 
  mutate(pct_value = value/sum(value), .by = c(name,year))
) %>% 
  filter(year %in% c(2020)) %>% 
  mutate(age = factor(age, levels = age_levels)) %>% 
  mutate(pct_value = value/sum(value),.by = c(name,year),
         pct_value = ifelse(sex == "Female",-pct_value,pct_value)) 

pop_pyr_plot <- pop_pyr %>% 
  ggplot(aes(x = pct_value,y = age,fill = sex))+
  facet_wrap(~name,strip.position = "bottom")+
  scale_fill_metro()+
  geom_col(position = "identity")+
  theme_void(base_size = 25)+
  guides()+
  geom_text(aes(label = age),
            data = . %>% filter(name == "El Salvador",sex == "Male"))+
  theme(strip.text = element_text(family = "Gill Sans"),
        legend.position = c(.75,.25))
  
  
ggs(
  plot = pop_pyr_plot,
  category = "pop_pyramid",
  subset = "cam",
  demographics = NULL,
  charttype = NULL,
  additionalinfo = NULL,
  folder = "rsc",
  width = 280,
  height = 170
)
```
